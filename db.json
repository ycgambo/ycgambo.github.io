{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/backup/sublime/Theme - Default.sublime-package","path":"backup/sublime/Theme - Default.sublime-package","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"source/backup/sublime/MarkdownEditing.sublime-package","path":"backup/sublime/MarkdownEditing.sublime-package","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"bc22888568e481fbcc46a23d3ef7ba757d92266d","modified":1509096260000},{"_id":"themes/hexo-theme-next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1509100243000},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1509100243000},{"_id":"themes/hexo-theme-next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1509100243000},{"_id":"themes/hexo-theme-next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1509100243000},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1509100243000},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1509100243000},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1509100243000},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1509100243000},{"_id":"themes/hexo-theme-next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1509100243000},{"_id":"themes/hexo-theme-next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1509100243000},{"_id":"themes/hexo-theme-next/README.cn.md","hash":"6d9177e7dad87e6129760e4b559bd3f7a15429d7","modified":1509100243000},{"_id":"themes/hexo-theme-next/README.md","hash":"1a79f01601517b777cfb238916635d4df7368473","modified":1509100243000},{"_id":"themes/hexo-theme-next/_config.yml","hash":"42da48b1adc529d87aa1c9aa95f17812f3734970","modified":1509116431000},{"_id":"themes/hexo-theme-next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1509100243000},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1509100243000},{"_id":"themes/hexo-theme-next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1509100243000},{"_id":"themes/hexo-theme-next/package-lock.json","hash":"12a3557021ecf4570f4ae6f6ce603177a2d1044e","modified":1509100243000},{"_id":"source/_posts/bootstrap-css-layout.sublime-workspace","hash":"174b0414fa72986e4f2a456d740d5d94613e723d","modified":1509103622000},{"_id":"source/_posts/php-mysql-engine.md","hash":"ab7c1868419ff19df309a51564745bed94ef6455","modified":1509113532000},{"_id":"source/_posts/php-observer+factory.md","hash":"b8ecb5f07f4838882fc7af77ef731346c077365a","modified":1509113755000},{"_id":"source/_posts/php-singleton.md","hash":"85f3f9b09fe88e99c44871efe4e83442de2a4d79","modified":1509113748000},{"_id":"source/_posts/vbs-copyFileFromUDisk.md","hash":"ee1b5bba5990d71b3078d0a8a7079b820cd83fc5","modified":1509113733000},{"_id":"source/categories/index.md","hash":"aa29b5c54c23e352e58272675e064ba57f433dfb","modified":1509103439000},{"_id":"source/images/avatar.jpg","hash":"baead5c03f1deaa8e28e9e4aac0baf8652bd243f","modified":1509114948000},{"_id":"source/tags/index.md","hash":"1837981b2dd892ef13986f622214b7920e31744e","modified":1509103434000},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1509100243000},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1509100243000},{"_id":"themes/hexo-theme-next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1509100243000},{"_id":"themes/hexo-theme-next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1509100243000},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"26bd9be87576eaab53aaf178b5ddd84d8bb4cabf","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1509100243000},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1509100243000},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1509100243000},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"7a64914a0a3c893c1aaa8b5349b85898f95af314","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"9efc455894921a66bbc074055d3b39c8a34a48a4","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"044bc872d7b59655e46f6fb1cf14f767e31a4dfa","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1509100243000},{"_id":"themes/hexo-theme-next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509100243000},{"_id":"source/backup/sublime/Theme - Default.sublime-package","hash":"ad9550b6cf37b20f711fc1a2751b51c4ad168827","modified":1509096260000},{"_id":"themes/hexo-theme-next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/valine.swig","hash":"f780973e0f8c2e52a70ac5e927af845d7b547b71","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1509100243000},{"_id":"source/backup/sublime/MarkdownEditing.sublime-package","hash":"77c4ba00a80564ebe44d4aa8428810e35e7aa37f","modified":1509096260000},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1509100243000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1509100243000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1509100243000},{"_id":"public/categories/index.html","hash":"7afac767958557f269e111909e23f764a233ef22","modified":1509116493198},{"_id":"public/tags/index.html","hash":"22acddfd4296cf9cd8826674014a4f1657dd8bac","modified":1509116493198},{"_id":"public/2017/07/17/php-mysql-engine/index.html","hash":"f62ae8502ffaad0496bec1aa3fb87c364e04869b","modified":1509116493198},{"_id":"public/archives/index.html","hash":"97bcb17f56a33e26c697bb20f2c413744b15ea80","modified":1509116493198},{"_id":"public/archives/2017/index.html","hash":"6a78f2fd8edc21f6768d904f84dff9f765d75b07","modified":1509116493198},{"_id":"public/archives/2017/06/index.html","hash":"94e0b6631a573b674b3d06eb04777f864fc3cbb6","modified":1509116493198},{"_id":"public/archives/2017/07/index.html","hash":"54ca71c68f7e1a5d88f160780c324186fb90333f","modified":1509116493198},{"_id":"public/tags/MySQL/index.html","hash":"1d6822ff1f421f20ed3186a4bc1fccab01a82f1d","modified":1509116493198},{"_id":"public/tags/php/index.html","hash":"7b8970950a9ee33aa499e7daabf2a11c48c0e4eb","modified":1509116493198},{"_id":"public/tags/设计模式/index.html","hash":"5242627876d1211a511c3007bada300cf824bf8c","modified":1509116493198},{"_id":"public/tags/VBS/index.html","hash":"04824b3dc02895fa2677e4d7069b5c524196a983","modified":1509116493198},{"_id":"public/2017/07/05/php-singleton/index.html","hash":"05979414459ba8a6613344ffd567f9488db76ab9","modified":1509116493198},{"_id":"public/2017/07/02/php-observer+factory/index.html","hash":"9f405a8095d21998fa48b72e1cee3b211fdcfd1b","modified":1509116493198},{"_id":"public/2017/06/27/vbs-copyFileFromUDisk/index.html","hash":"1ea9aed5d79cfb983af6a4116d9c0017edee607f","modified":1509116493198},{"_id":"public/index.html","hash":"4a8e436f566b6e077de86783ae8895bcf2249403","modified":1509116493198},{"_id":"public/CNAME","hash":"bc22888568e481fbcc46a23d3ef7ba757d92266d","modified":1509116493212},{"_id":"public/images/avatar.jpg","hash":"baead5c03f1deaa8e28e9e4aac0baf8652bd243f","modified":1509116493212},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1509116493212},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1509116493212},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1509116493213},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1509116493213},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1509116493213},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1509116493213},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1509116493213},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1509116493213},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1509116493213},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1509116493213},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1509116493213},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1509116493213},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509116493213},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1509116493213},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509116493213},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1509116493213},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1509116493213},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1509116493213},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1509116493213},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1509116493214},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1509116493214},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1509116493214},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1509116493214},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1509116493214},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1509116493214},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1509116493214},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1509116493214},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1509116493214},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1509116493214},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1509116493214},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1509116493214},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1509116493214},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1509116493214},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1509116493790},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1509116493797},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1509116493807},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1509116493807},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1509116493807},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1509116493807},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1509116493807},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1509116493807},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1509116493807},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1509116493807},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1509116493807},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1509116493807},{"_id":"public/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1509116493807},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1509116493807},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1509116493807},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1509116493807},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1509116493807},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1509116493807},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1509116493807},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1509116493807},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1509116493807},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1509116493807},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1509116493807},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1509116493807},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1509116493807},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1509116493808},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1509116493808},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1509116493808},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1509116493808},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1509116493808},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1509116493808},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1509116493808},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1509116493808},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1509116493808},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1509116493808},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1509116493808},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1509116493808},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1509116493808},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1509116493808},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1509116493808},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1509116493808},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1509116493808},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1509116493808},{"_id":"public/css/main.css","hash":"f08823321153ddf11fe519e0150e6dd23be9336a","modified":1509116493808},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1509116493808},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1509116493808},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1509116493808},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1509116493808},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1509116493808},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1509116493808},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1509116493808},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1509116493808},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1509116493808},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1509116493808},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1509116493808},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1509116493808},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1509116493809},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1509116493809},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1509116493809},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1509116493809},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1509116493809},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1509116493809},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1509116493809},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1509116493809},{"_id":"public/backup/sublime/Theme - Default.sublime-package","hash":"ad9550b6cf37b20f711fc1a2751b51c4ad168827","modified":1509116493809},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1509116493809},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1509116493809},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1509116493809},{"_id":"public/backup/sublime/MarkdownEditing.sublime-package","hash":"77c4ba00a80564ebe44d4aa8428810e35e7aa37f","modified":1509116493812},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1509116493845}],"Category":[],"Data":[],"Page":[{"layout":"page","type":"categories","date":"2017-10-27T11:16:46.000Z","comment":false,"_content":"","source":"categories/index.md","raw":"---\nlayout: page\ntype: \"categories\"\ndate: 2017-10-27 19:16:46\ncomment: false\n---\n","updated":"2017-10-27T11:23:59.000Z","path":"categories/index.html","title":"","comments":1,"_id":"cj9a0ztlb0001n9s8o49z9o94","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"page","type":"tags","date":"2017-10-27T11:16:24.000Z","comment":false,"_content":"","source":"tags/index.md","raw":"---\nlayout: page\ntype: \"tags\"\ndate: 2017-10-27 19:16:24\ncomment: false\n---\n","updated":"2017-10-27T11:23:54.000Z","path":"tags/index.html","title":"","comments":1,"_id":"cj9a0ztpc000hn9s8k1c4dp4b","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"MySQL及InnoDB引擎","date":"2017-07-16T16:00:00.000Z","_content":"\nMySQL的[Introduction to InnoDB](https://dev.mysql.com/doc/refman/5.7/en/innodb-introduction.html)介绍了InnoBD的一些特点：\n\n<!-- more -->\n\nKey advantages of InnoDB include:\n\n- Its DML operations follow the ACID model, with transactions featuring commit, rollback, and crash-recovery capabilities to protect user data. See Section 14.2, “InnoDB and the ACID Model” for more information.\n\n- Row-level locking and Oracle-style consistent reads increase multi-user concurrency and performance. See Section 14.5, “InnoDB Locking and Transaction Model” for more information.\n\n- InnoDB tables arrange your data on disk to optimize queries based on primary keys. Each InnoDB table has a primary key index called the clustered index that organizes the data to minimize I/O for primary key lookups. See Section 14.8.2.1, “Clustered and Secondary Indexes” for more information.\n\n- To maintain data integrity, InnoDB supports FOREIGN KEY constraints. With foreign keys, inserts, updates, and deletes are checked to ensure they do not result in inconsistencies across different tables. See Section 14.8.1.6, “InnoDB and FOREIGN KEY Constraints” for more information. \n\nDML(Data Manipulation Language)数据操纵语言。\n\nACID是指在可靠数据库管理系统（DBMS）中，事务(transaction)所应该具有的四个特性：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。\n\n翻译过来就是：\n\n- InnoDB的DML操作支持ACID事务模型中的提交、回滚、崩溃恢复\n- 行锁和类似Oracle的并行读取提升了多用户操作性能。\n- InnoDB表依靠主键整理磁盘中的数据以改善查询。每一张InnoDB表都有一个叫聚合索引的主键用来组织数据以最小化主键的查询I/O。\n- 为了保证数据完整和同步，InnoDB提供了外键约束。通过外键，跨表的数据插入、更新、删除可以保证一致","source":"_posts/php-mysql-engine.md","raw":"---\ntitle: MySQL及InnoDB引擎\ndate: 2017-07-17\ntag: [MySQL]\n---\n\nMySQL的[Introduction to InnoDB](https://dev.mysql.com/doc/refman/5.7/en/innodb-introduction.html)介绍了InnoBD的一些特点：\n\n<!-- more -->\n\nKey advantages of InnoDB include:\n\n- Its DML operations follow the ACID model, with transactions featuring commit, rollback, and crash-recovery capabilities to protect user data. See Section 14.2, “InnoDB and the ACID Model” for more information.\n\n- Row-level locking and Oracle-style consistent reads increase multi-user concurrency and performance. See Section 14.5, “InnoDB Locking and Transaction Model” for more information.\n\n- InnoDB tables arrange your data on disk to optimize queries based on primary keys. Each InnoDB table has a primary key index called the clustered index that organizes the data to minimize I/O for primary key lookups. See Section 14.8.2.1, “Clustered and Secondary Indexes” for more information.\n\n- To maintain data integrity, InnoDB supports FOREIGN KEY constraints. With foreign keys, inserts, updates, and deletes are checked to ensure they do not result in inconsistencies across different tables. See Section 14.8.1.6, “InnoDB and FOREIGN KEY Constraints” for more information. \n\nDML(Data Manipulation Language)数据操纵语言。\n\nACID是指在可靠数据库管理系统（DBMS）中，事务(transaction)所应该具有的四个特性：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。\n\n翻译过来就是：\n\n- InnoDB的DML操作支持ACID事务模型中的提交、回滚、崩溃恢复\n- 行锁和类似Oracle的并行读取提升了多用户操作性能。\n- InnoDB表依靠主键整理磁盘中的数据以改善查询。每一张InnoDB表都有一个叫聚合索引的主键用来组织数据以最小化主键的查询I/O。\n- 为了保证数据完整和同步，InnoDB提供了外键约束。通过外键，跨表的数据插入、更新、删除可以保证一致","slug":"php-mysql-engine","published":1,"updated":"2017-10-27T14:12:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9a0ztl70000n9s8mi3j3jki","content":"<p>MySQL的<a href=\"https://dev.mysql.com/doc/refman/5.7/en/innodb-introduction.html\" target=\"_blank\" rel=\"external\">Introduction to InnoDB</a>介绍了InnoBD的一些特点：</p>\n<a id=\"more\"></a>\n<p>Key advantages of InnoDB include:</p>\n<ul>\n<li><p>Its DML operations follow the ACID model, with transactions featuring commit, rollback, and crash-recovery capabilities to protect user data. See Section 14.2, “InnoDB and the ACID Model” for more information.</p>\n</li>\n<li><p>Row-level locking and Oracle-style consistent reads increase multi-user concurrency and performance. See Section 14.5, “InnoDB Locking and Transaction Model” for more information.</p>\n</li>\n<li><p>InnoDB tables arrange your data on disk to optimize queries based on primary keys. Each InnoDB table has a primary key index called the clustered index that organizes the data to minimize I/O for primary key lookups. See Section 14.8.2.1, “Clustered and Secondary Indexes” for more information.</p>\n</li>\n<li><p>To maintain data integrity, InnoDB supports FOREIGN KEY constraints. With foreign keys, inserts, updates, and deletes are checked to ensure they do not result in inconsistencies across different tables. See Section 14.8.1.6, “InnoDB and FOREIGN KEY Constraints” for more information. </p>\n</li>\n</ul>\n<p>DML(Data Manipulation Language)数据操纵语言。</p>\n<p>ACID是指在可靠数据库管理系统（DBMS）中，事务(transaction)所应该具有的四个特性：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。</p>\n<p>翻译过来就是：</p>\n<ul>\n<li>InnoDB的DML操作支持ACID事务模型中的提交、回滚、崩溃恢复</li>\n<li>行锁和类似Oracle的并行读取提升了多用户操作性能。</li>\n<li>InnoDB表依靠主键整理磁盘中的数据以改善查询。每一张InnoDB表都有一个叫聚合索引的主键用来组织数据以最小化主键的查询I/O。</li>\n<li>为了保证数据完整和同步，InnoDB提供了外键约束。通过外键，跨表的数据插入、更新、删除可以保证一致</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>MySQL的<a href=\"https://dev.mysql.com/doc/refman/5.7/en/innodb-introduction.html\" target=\"_blank\" rel=\"external\">Introduction to InnoDB</a>介绍了InnoBD的一些特点：</p>","more":"<p>Key advantages of InnoDB include:</p>\n<ul>\n<li><p>Its DML operations follow the ACID model, with transactions featuring commit, rollback, and crash-recovery capabilities to protect user data. See Section 14.2, “InnoDB and the ACID Model” for more information.</p>\n</li>\n<li><p>Row-level locking and Oracle-style consistent reads increase multi-user concurrency and performance. See Section 14.5, “InnoDB Locking and Transaction Model” for more information.</p>\n</li>\n<li><p>InnoDB tables arrange your data on disk to optimize queries based on primary keys. Each InnoDB table has a primary key index called the clustered index that organizes the data to minimize I/O for primary key lookups. See Section 14.8.2.1, “Clustered and Secondary Indexes” for more information.</p>\n</li>\n<li><p>To maintain data integrity, InnoDB supports FOREIGN KEY constraints. With foreign keys, inserts, updates, and deletes are checked to ensure they do not result in inconsistencies across different tables. See Section 14.8.1.6, “InnoDB and FOREIGN KEY Constraints” for more information. </p>\n</li>\n</ul>\n<p>DML(Data Manipulation Language)数据操纵语言。</p>\n<p>ACID是指在可靠数据库管理系统（DBMS）中，事务(transaction)所应该具有的四个特性：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。</p>\n<p>翻译过来就是：</p>\n<ul>\n<li>InnoDB的DML操作支持ACID事务模型中的提交、回滚、崩溃恢复</li>\n<li>行锁和类似Oracle的并行读取提升了多用户操作性能。</li>\n<li>InnoDB表依靠主键整理磁盘中的数据以改善查询。每一张InnoDB表都有一个叫聚合索引的主键用来组织数据以最小化主键的查询I/O。</li>\n<li>为了保证数据完整和同步，InnoDB提供了外键约束。通过外键，跨表的数据插入、更新、删除可以保证一致</li>\n</ul>"},{"title":"PHP单例模式","date":"2017-07-04T16:00:00.000Z","_content":"\n>单例最重要的方面在于对创建示例的限制能力。如果不这样做，潜在的多个实例将被创建，因而造成严重破坏\n\n如果在实例化时将类保存在全局变量，那么迟早会发生冲突。单例模式是一种对于全局变量的改进，可以保证全局只有一个单例类。\n\n目录：\n<!-- MarkdownTOC -->\n\n- [一个简单的单例类](#%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%BE%8B%E7%B1%BB)\n- [解决代码复用的问题](#%E8%A7%A3%E5%86%B3%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98)\n    - [使用Traits](#%E4%BD%BF%E7%94%A8traits)\n    - [使用继承](#%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF)\n- [解决复用类的问题](#%E8%A7%A3%E5%86%B3%E5%A4%8D%E7%94%A8%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98)\n- [对隐藏依赖的解释](#%E5%AF%B9%E9%9A%90%E8%97%8F%E4%BE%9D%E8%B5%96%E7%9A%84%E8%A7%A3%E9%87%8A)\n\n<!-- /MarkdownTOC -->\n\n<!-- more -->\n\n<a name=\"%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%BE%8B%E7%B1%BB\"></a>\n## 一个简单的单例类\n\n```php\nclass Singleton\n{\n    // This static variable stores this Singleton itself\n    private static $_instance = null;\n\n    // Make the constructor private to prevent `new` method to create Singleton\n    private function __construct()\n    {\n        // do something here\n    }\n\n    // Prevent `clone` method to copy a Singleton\n    private function __clone()\n    {\n    }\n\n    // The only way to get this Singleton\n    public static function getInstance()\n    {\n        if (!isset(self::$_instance)) {\n            self::$_instance = new Singleton();\n        }\n        return self::$_instance;\n    }\n}\n\n$test = Singleton::getInstance();\n$test->val = 1;\n$test2 = Singleton::getInstance();\necho $test2->val;   // 1\n```\n\n上面实现了最原始的单例类：\n- 通过一个私有的静态变量保存自身\n- 私有化构造函数和克隆函数，使该类仅能从该类自身内部创建\n- 开放getInstance接口，在初次获取单例时创建单例并调用构造函数，之后始终返回该单例\n\n但同时也产生了一些问题：\n- 代码复用。两个单例类仅在构造时有较大差异时，是否只能拷贝代码？(比如连接两个不同的数据库)\n- 重用类。当需要同一个类的两个单例时，似乎无能为力。(比如需要同一数据库的两个独立连接)\n- 可能隐藏依赖。如果别的类中调用了单例类，这种依赖十分隐蔽。\n\n<a name=\"%E8%A7%A3%E5%86%B3%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98\"></a>\n## 解决代码复用的问题\n\n两个类只在构造函数有所不同，其他方法和属性基本相似，此时有两种解决方法：\n- 使用Traits\n- 继承\n\n<a name=\"%E4%BD%BF%E7%94%A8traits\"></a>\n### 使用Traits\n\nTarits的最基本形式被认为是一种辅助编译器的复制粘贴技术。\n\n```php\ntrait Singleton\n{\n    // This static variable stores this Singleton itself\n    private static $_instance = null;\n\n    // Prevent `clone` method to copy a Singleton\n    private function __clone()\n    {\n    }\n\n    // The only way to get this Singleton\n    public static function getInstance()\n    {\n        if (!isset(self::$_instance)) {\n            $class = __CLASS__;\n            self::$_instance = new $class();\n        }\n        return self::$_instance;\n    }\n\n    // Some common methods goes here\n}\n\nclass Singleton_1\n{\n    use Singleton;\n\n    // Make the constructor private to prevent `new` method to create Singleton\n    private function __construct()\n    {\n        // do something here\n    }\n}\n\nclass Singleton_2\n{\n    use Singleton;\n\n    // Make the constructor private to prevent `new` method to create Singleton\n    private function __construct()\n    {\n        // do aother thing here\n    }\n}\n```\n\nTraits通过动态检测调用getInstance方法时的类，区分两个单例类，调用他们不同的构造方法，但同时又可以在trait结构体中实现相同的属性和方法。\n\n但是这种实现无法解决重用类的问题，如果需要两个Singleton_1的实例，Traits将束手无策。\n\n<a name=\"%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF\"></a>\n### 使用继承\n\n```php\nabstract class SingletonClass\n{\n    /**\n     * @var array [instanceNeedle => instance]\n     * instanceNeedle equals \"className\".\n     */\n    private static $_instanceMap;\n\n    // Make the constructor protected either to prevent `new` method or to grant access to its implementer\n    final protected function __construct()\n    {\n    }\n\n    // Either to prevent `clone` method or to grant access to its implementer\n    final protected function __clone()\n    {\n    }\n\n    // The only way to get a Singleton\n    public function getInstance()\n    {\n        $class = get_called_class();\n\n        if (!isset(self::$_instanceMap[$instanceNeedle])) {\n            self::$_instanceMap[$instanceNeedle] = new $class();\n        }\n        return self::$_instanceMap[$instanceNeedle];\n    }\n}\n\nclass Singleton_1 extends SingletonClass\n{\n    public $val = 0;\n}\n\nclass Singleton_2 extends SingletonClass\n{\n    public $val = 0;\n}\n\n$test1 = Singleton_1::getInstance();\n$test2 = Singleton_2::getInstance();\n$test1->val = 1;\n$test2->val = 2;\necho $test1->val . $test2->val;   // 12\n```\n\n通过继承实现有以下要点：\n- 通过一个私有的静态数组保存单例类的映射\n- 受保护的构造函数和克隆函数，使该类可以从抽象类创建而不能从外部环境创建\n- 开放getInstance接口，初次获取某一单例时创建单例并调用构造函数，然后将其保存至数组中供将来使用\n\n接下来我们可以扩展该抽象，使其可以复用类\n\n<a name=\"%E8%A7%A3%E5%86%B3%E5%A4%8D%E7%94%A8%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98\"></a>\n## 解决复用类的问题\n\n```php\nabstract class SingletonClass\n{\n    /**\n     * @var array [instanceNeedle => instance]\n     * instanceNeedle equals \"className\" (default) or \"className/instanceNeedle\" (specified instanceNeedle).\n     * all instanceNeedle will be saved in lower case, so it's case insensitive.\n     */\n    private static $_instanceMap;\n\n    // Make the constructor protected either to prevent `new` method or to grant access to its implementer\n    final protected function __construct()\n    {\n    }\n\n    // Either to prevent `clone` method or to grant access to its implementer\n    final protected function __clone()\n    {\n    }\n\n    // Grant its implementer a power to init itself\n    protected function init()\n    {\n    }\n\n    // The only way to get a Singleton\n    public function getInstance($instanceNeedle = '')\n    {\n        $class = get_called_class();\n        $instanceNeedle = empty($instanceNeedle) ? $class : $class . '/' . $instanceNeedle;\n        $instanceNeedle = strtolower($instanceNeedle);\n\n        if (!isset(self::$_instanceMap[$instanceNeedle])) {\n            self::$_instanceMap[$instanceNeedle] = new $class();\n            self::$_instanceMap[$instanceNeedle]->init();\n        }\n        return self::$_instanceMap[$instanceNeedle];\n    }\n}\n\nclass Singleton_1 extends SingletonClass\n{\n    public $val = 0;\n}\n\nclass Singleton_2 extends SingletonClass\n{\n    public $val = 0;\n}\n\n$test1 = Singleton_1::getInstance();\n$test2 = Singleton_2::getInstance();\n$test3 = Singleton_2::getInstance('test2');\n$test1->val = 1;\n$test2->val = 2;\n$test3->val = 3;\necho $test1->val . $test2->val . $test3->val;   // 123 \n```\n\n较之前的实现，该类在以下几处做了扩展：\n- 通过init方法，赋予子类初始化的能力\n- 可选的Needle，在指明Needle时，返回对应的单例，实现了复用类的能力\n\n\n<a name=\"%E5%AF%B9%E9%9A%90%E8%97%8F%E4%BE%9D%E8%B5%96%E7%9A%84%E8%A7%A3%E9%87%8A\"></a>\n## 对隐藏依赖的解释\n\n现代化的PHP应用采用autoload方法加载类，这对单例类来说似乎非常友好。\n\n```php\nnamespace \\namespace\\to\\this\\class\n\nuse \\class1\\in\\some\\namespace;\nuse \\class22\\in\\some\\namespace;\nuse \\Singleton\\in\\some\\namespace;\nuse \\class99\\in\\some\\namespace;\n\nclass SomeClass\n{\n    public val1;\n    public val2;\n    public val99;\n\n    function func1()\n    {\n    }\n\n    function func2()\n    {\n        // some code goes here\n        $var = Singleton::getInstance();\n        $var->doSomeThing();\n        // some other code\n    }\n\n    function func99()\n    {\n    }\n}\n```\n\n这个类文件中包含了命名空间声明，使用该类时，PHP会自动加载单例类的依赖，但这并不意味着不存在依赖。\n\n设想这么一种情况：\n- 单例类S用来保存数据库连接\n- 类A会为S注册数据库连接\n- 类B会利用S操作数据库\n\n如果A的实现者忘记了为S注册数据库连接，那么B操作数据库失败时，就只能去单例类S找原因，而真正的原因则藏在A中，可怜的B甚至不知道A的存在。\n","source":"_posts/php-singleton.md","raw":"---\ntitle: PHP单例模式\ndate: 2017-07-05\ntag: [php, 设计模式]\n---\n\n>单例最重要的方面在于对创建示例的限制能力。如果不这样做，潜在的多个实例将被创建，因而造成严重破坏\n\n如果在实例化时将类保存在全局变量，那么迟早会发生冲突。单例模式是一种对于全局变量的改进，可以保证全局只有一个单例类。\n\n目录：\n<!-- MarkdownTOC -->\n\n- [一个简单的单例类](#%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%BE%8B%E7%B1%BB)\n- [解决代码复用的问题](#%E8%A7%A3%E5%86%B3%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98)\n    - [使用Traits](#%E4%BD%BF%E7%94%A8traits)\n    - [使用继承](#%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF)\n- [解决复用类的问题](#%E8%A7%A3%E5%86%B3%E5%A4%8D%E7%94%A8%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98)\n- [对隐藏依赖的解释](#%E5%AF%B9%E9%9A%90%E8%97%8F%E4%BE%9D%E8%B5%96%E7%9A%84%E8%A7%A3%E9%87%8A)\n\n<!-- /MarkdownTOC -->\n\n<!-- more -->\n\n<a name=\"%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%BE%8B%E7%B1%BB\"></a>\n## 一个简单的单例类\n\n```php\nclass Singleton\n{\n    // This static variable stores this Singleton itself\n    private static $_instance = null;\n\n    // Make the constructor private to prevent `new` method to create Singleton\n    private function __construct()\n    {\n        // do something here\n    }\n\n    // Prevent `clone` method to copy a Singleton\n    private function __clone()\n    {\n    }\n\n    // The only way to get this Singleton\n    public static function getInstance()\n    {\n        if (!isset(self::$_instance)) {\n            self::$_instance = new Singleton();\n        }\n        return self::$_instance;\n    }\n}\n\n$test = Singleton::getInstance();\n$test->val = 1;\n$test2 = Singleton::getInstance();\necho $test2->val;   // 1\n```\n\n上面实现了最原始的单例类：\n- 通过一个私有的静态变量保存自身\n- 私有化构造函数和克隆函数，使该类仅能从该类自身内部创建\n- 开放getInstance接口，在初次获取单例时创建单例并调用构造函数，之后始终返回该单例\n\n但同时也产生了一些问题：\n- 代码复用。两个单例类仅在构造时有较大差异时，是否只能拷贝代码？(比如连接两个不同的数据库)\n- 重用类。当需要同一个类的两个单例时，似乎无能为力。(比如需要同一数据库的两个独立连接)\n- 可能隐藏依赖。如果别的类中调用了单例类，这种依赖十分隐蔽。\n\n<a name=\"%E8%A7%A3%E5%86%B3%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98\"></a>\n## 解决代码复用的问题\n\n两个类只在构造函数有所不同，其他方法和属性基本相似，此时有两种解决方法：\n- 使用Traits\n- 继承\n\n<a name=\"%E4%BD%BF%E7%94%A8traits\"></a>\n### 使用Traits\n\nTarits的最基本形式被认为是一种辅助编译器的复制粘贴技术。\n\n```php\ntrait Singleton\n{\n    // This static variable stores this Singleton itself\n    private static $_instance = null;\n\n    // Prevent `clone` method to copy a Singleton\n    private function __clone()\n    {\n    }\n\n    // The only way to get this Singleton\n    public static function getInstance()\n    {\n        if (!isset(self::$_instance)) {\n            $class = __CLASS__;\n            self::$_instance = new $class();\n        }\n        return self::$_instance;\n    }\n\n    // Some common methods goes here\n}\n\nclass Singleton_1\n{\n    use Singleton;\n\n    // Make the constructor private to prevent `new` method to create Singleton\n    private function __construct()\n    {\n        // do something here\n    }\n}\n\nclass Singleton_2\n{\n    use Singleton;\n\n    // Make the constructor private to prevent `new` method to create Singleton\n    private function __construct()\n    {\n        // do aother thing here\n    }\n}\n```\n\nTraits通过动态检测调用getInstance方法时的类，区分两个单例类，调用他们不同的构造方法，但同时又可以在trait结构体中实现相同的属性和方法。\n\n但是这种实现无法解决重用类的问题，如果需要两个Singleton_1的实例，Traits将束手无策。\n\n<a name=\"%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF\"></a>\n### 使用继承\n\n```php\nabstract class SingletonClass\n{\n    /**\n     * @var array [instanceNeedle => instance]\n     * instanceNeedle equals \"className\".\n     */\n    private static $_instanceMap;\n\n    // Make the constructor protected either to prevent `new` method or to grant access to its implementer\n    final protected function __construct()\n    {\n    }\n\n    // Either to prevent `clone` method or to grant access to its implementer\n    final protected function __clone()\n    {\n    }\n\n    // The only way to get a Singleton\n    public function getInstance()\n    {\n        $class = get_called_class();\n\n        if (!isset(self::$_instanceMap[$instanceNeedle])) {\n            self::$_instanceMap[$instanceNeedle] = new $class();\n        }\n        return self::$_instanceMap[$instanceNeedle];\n    }\n}\n\nclass Singleton_1 extends SingletonClass\n{\n    public $val = 0;\n}\n\nclass Singleton_2 extends SingletonClass\n{\n    public $val = 0;\n}\n\n$test1 = Singleton_1::getInstance();\n$test2 = Singleton_2::getInstance();\n$test1->val = 1;\n$test2->val = 2;\necho $test1->val . $test2->val;   // 12\n```\n\n通过继承实现有以下要点：\n- 通过一个私有的静态数组保存单例类的映射\n- 受保护的构造函数和克隆函数，使该类可以从抽象类创建而不能从外部环境创建\n- 开放getInstance接口，初次获取某一单例时创建单例并调用构造函数，然后将其保存至数组中供将来使用\n\n接下来我们可以扩展该抽象，使其可以复用类\n\n<a name=\"%E8%A7%A3%E5%86%B3%E5%A4%8D%E7%94%A8%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98\"></a>\n## 解决复用类的问题\n\n```php\nabstract class SingletonClass\n{\n    /**\n     * @var array [instanceNeedle => instance]\n     * instanceNeedle equals \"className\" (default) or \"className/instanceNeedle\" (specified instanceNeedle).\n     * all instanceNeedle will be saved in lower case, so it's case insensitive.\n     */\n    private static $_instanceMap;\n\n    // Make the constructor protected either to prevent `new` method or to grant access to its implementer\n    final protected function __construct()\n    {\n    }\n\n    // Either to prevent `clone` method or to grant access to its implementer\n    final protected function __clone()\n    {\n    }\n\n    // Grant its implementer a power to init itself\n    protected function init()\n    {\n    }\n\n    // The only way to get a Singleton\n    public function getInstance($instanceNeedle = '')\n    {\n        $class = get_called_class();\n        $instanceNeedle = empty($instanceNeedle) ? $class : $class . '/' . $instanceNeedle;\n        $instanceNeedle = strtolower($instanceNeedle);\n\n        if (!isset(self::$_instanceMap[$instanceNeedle])) {\n            self::$_instanceMap[$instanceNeedle] = new $class();\n            self::$_instanceMap[$instanceNeedle]->init();\n        }\n        return self::$_instanceMap[$instanceNeedle];\n    }\n}\n\nclass Singleton_1 extends SingletonClass\n{\n    public $val = 0;\n}\n\nclass Singleton_2 extends SingletonClass\n{\n    public $val = 0;\n}\n\n$test1 = Singleton_1::getInstance();\n$test2 = Singleton_2::getInstance();\n$test3 = Singleton_2::getInstance('test2');\n$test1->val = 1;\n$test2->val = 2;\n$test3->val = 3;\necho $test1->val . $test2->val . $test3->val;   // 123 \n```\n\n较之前的实现，该类在以下几处做了扩展：\n- 通过init方法，赋予子类初始化的能力\n- 可选的Needle，在指明Needle时，返回对应的单例，实现了复用类的能力\n\n\n<a name=\"%E5%AF%B9%E9%9A%90%E8%97%8F%E4%BE%9D%E8%B5%96%E7%9A%84%E8%A7%A3%E9%87%8A\"></a>\n## 对隐藏依赖的解释\n\n现代化的PHP应用采用autoload方法加载类，这对单例类来说似乎非常友好。\n\n```php\nnamespace \\namespace\\to\\this\\class\n\nuse \\class1\\in\\some\\namespace;\nuse \\class22\\in\\some\\namespace;\nuse \\Singleton\\in\\some\\namespace;\nuse \\class99\\in\\some\\namespace;\n\nclass SomeClass\n{\n    public val1;\n    public val2;\n    public val99;\n\n    function func1()\n    {\n    }\n\n    function func2()\n    {\n        // some code goes here\n        $var = Singleton::getInstance();\n        $var->doSomeThing();\n        // some other code\n    }\n\n    function func99()\n    {\n    }\n}\n```\n\n这个类文件中包含了命名空间声明，使用该类时，PHP会自动加载单例类的依赖，但这并不意味着不存在依赖。\n\n设想这么一种情况：\n- 单例类S用来保存数据库连接\n- 类A会为S注册数据库连接\n- 类B会利用S操作数据库\n\n如果A的实现者忘记了为S注册数据库连接，那么B操作数据库失败时，就只能去单例类S找原因，而真正的原因则藏在A中，可怜的B甚至不知道A的存在。\n","slug":"php-singleton","published":1,"updated":"2017-10-27T14:15:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9a0ztlc0002n9s8z5j84bsr","content":"<blockquote>\n<p>单例最重要的方面在于对创建示例的限制能力。如果不这样做，潜在的多个实例将被创建，因而造成严重破坏</p>\n</blockquote>\n<p>如果在实例化时将类保存在全局变量，那么迟早会发生冲突。单例模式是一种对于全局变量的改进，可以保证全局只有一个单例类。</p>\n<p>目录：<br><!-- MarkdownTOC --></p>\n<ul>\n<li><a href=\"#%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%BE%8B%E7%B1%BB\">一个简单的单例类</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98\">解决代码复用的问题</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8traits\">使用Traits</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF\">使用继承</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E5%A4%8D%E7%94%A8%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98\">解决复用类的问题</a></li>\n<li><a href=\"#%E5%AF%B9%E9%9A%90%E8%97%8F%E4%BE%9D%E8%B5%96%E7%9A%84%E8%A7%A3%E9%87%8A\">对隐藏依赖的解释</a></li>\n</ul>\n<!-- /MarkdownTOC -->\n<a id=\"more\"></a>\n<p><a name=\"%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%BE%8B%E7%B1%BB\"></a></p>\n<h2 id=\"一个简单的单例类\"><a href=\"#一个简单的单例类\" class=\"headerlink\" title=\"一个简单的单例类\"></a>一个简单的单例类</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">// This static variable stores this Singleton itself</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $_instance = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor private to prevent `new` method to create Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// do something here</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Prevent `clone` method to copy a Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// The only way to get this Singleton</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_instance)) &#123;</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instance = <span class=\"keyword\">new</span> Singleton();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$_instance;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$test = Singleton::getInstance();</div><div class=\"line\">$test-&gt;val = <span class=\"number\">1</span>;</div><div class=\"line\">$test2 = Singleton::getInstance();</div><div class=\"line\"><span class=\"keyword\">echo</span> $test2-&gt;val;   <span class=\"comment\">// 1</span></div></pre></td></tr></table></figure>\n<p>上面实现了最原始的单例类：</p>\n<ul>\n<li>通过一个私有的静态变量保存自身</li>\n<li>私有化构造函数和克隆函数，使该类仅能从该类自身内部创建</li>\n<li>开放getInstance接口，在初次获取单例时创建单例并调用构造函数，之后始终返回该单例</li>\n</ul>\n<p>但同时也产生了一些问题：</p>\n<ul>\n<li>代码复用。两个单例类仅在构造时有较大差异时，是否只能拷贝代码？(比如连接两个不同的数据库)</li>\n<li>重用类。当需要同一个类的两个单例时，似乎无能为力。(比如需要同一数据库的两个独立连接)</li>\n<li>可能隐藏依赖。如果别的类中调用了单例类，这种依赖十分隐蔽。</li>\n</ul>\n<p><a name=\"%E8%A7%A3%E5%86%B3%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98\"></a></p>\n<h2 id=\"解决代码复用的问题\"><a href=\"#解决代码复用的问题\" class=\"headerlink\" title=\"解决代码复用的问题\"></a>解决代码复用的问题</h2><p>两个类只在构造函数有所不同，其他方法和属性基本相似，此时有两种解决方法：</p>\n<ul>\n<li>使用Traits</li>\n<li>继承</li>\n</ul>\n<p><a name=\"%E4%BD%BF%E7%94%A8traits\"></a></p>\n<h3 id=\"使用Traits\"><a href=\"#使用Traits\" class=\"headerlink\" title=\"使用Traits\"></a>使用Traits</h3><p>Tarits的最基本形式被认为是一种辅助编译器的复制粘贴技术。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">trait</span> Singleton</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">// This static variable stores this Singleton itself</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $_instance = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Prevent `clone` method to copy a Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// The only way to get this Singleton</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_instance)) &#123;</div><div class=\"line\">            $class = <span class=\"keyword\">__CLASS__</span>;</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instance = <span class=\"keyword\">new</span> $class();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$_instance;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Some common methods goes here</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_1</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">Singleton</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor private to prevent `new` method to create Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// do something here</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_2</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">Singleton</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor private to prevent `new` method to create Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// do aother thing here</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Traits通过动态检测调用getInstance方法时的类，区分两个单例类，调用他们不同的构造方法，但同时又可以在trait结构体中实现相同的属性和方法。</p>\n<p>但是这种实现无法解决重用类的问题，如果需要两个Singleton_1的实例，Traits将束手无策。</p>\n<p><a name=\"%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF\"></a></p>\n<h3 id=\"使用继承\"><a href=\"#使用继承\" class=\"headerlink\" title=\"使用继承\"></a>使用继承</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> array [instanceNeedle =&gt; instance]</span></div><div class=\"line\"><span class=\"comment\">     * instanceNeedle equals \"className\".</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $_instanceMap;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor protected either to prevent `new` method or to grant access to its implementer</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Either to prevent `clone` method or to grant access to its implementer</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// The only way to get a Singleton</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        $class = get_called_class();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle])) &#123;</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle] = <span class=\"keyword\">new</span> $class();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_1</span> <span class=\"keyword\">extends</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $val = <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_2</span> <span class=\"keyword\">extends</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $val = <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$test1 = Singleton_1::getInstance();</div><div class=\"line\">$test2 = Singleton_2::getInstance();</div><div class=\"line\">$test1-&gt;val = <span class=\"number\">1</span>;</div><div class=\"line\">$test2-&gt;val = <span class=\"number\">2</span>;</div><div class=\"line\"><span class=\"keyword\">echo</span> $test1-&gt;val . $test2-&gt;val;   <span class=\"comment\">// 12</span></div></pre></td></tr></table></figure>\n<p>通过继承实现有以下要点：</p>\n<ul>\n<li>通过一个私有的静态数组保存单例类的映射</li>\n<li>受保护的构造函数和克隆函数，使该类可以从抽象类创建而不能从外部环境创建</li>\n<li>开放getInstance接口，初次获取某一单例时创建单例并调用构造函数，然后将其保存至数组中供将来使用</li>\n</ul>\n<p>接下来我们可以扩展该抽象，使其可以复用类</p>\n<p><a name=\"%E8%A7%A3%E5%86%B3%E5%A4%8D%E7%94%A8%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98\"></a></p>\n<h2 id=\"解决复用类的问题\"><a href=\"#解决复用类的问题\" class=\"headerlink\" title=\"解决复用类的问题\"></a>解决复用类的问题</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> array [instanceNeedle =&gt; instance]</span></div><div class=\"line\"><span class=\"comment\">     * instanceNeedle equals \"className\" (default) or \"className/instanceNeedle\" (specified instanceNeedle).</span></div><div class=\"line\"><span class=\"comment\">     * all instanceNeedle will be saved in lower case, so it's case insensitive.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $_instanceMap;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor protected either to prevent `new` method or to grant access to its implementer</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Either to prevent `clone` method or to grant access to its implementer</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Grant its implementer a power to init itself</span></div><div class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// The only way to get a Singleton</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">($instanceNeedle = <span class=\"string\">''</span>)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        $class = get_called_class();</div><div class=\"line\">        $instanceNeedle = <span class=\"keyword\">empty</span>($instanceNeedle) ? $class : $class . <span class=\"string\">'/'</span> . $instanceNeedle;</div><div class=\"line\">        $instanceNeedle = strtolower($instanceNeedle);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle])) &#123;</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle] = <span class=\"keyword\">new</span> $class();</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle]-&gt;init();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_1</span> <span class=\"keyword\">extends</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $val = <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_2</span> <span class=\"keyword\">extends</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $val = <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$test1 = Singleton_1::getInstance();</div><div class=\"line\">$test2 = Singleton_2::getInstance();</div><div class=\"line\">$test3 = Singleton_2::getInstance(<span class=\"string\">'test2'</span>);</div><div class=\"line\">$test1-&gt;val = <span class=\"number\">1</span>;</div><div class=\"line\">$test2-&gt;val = <span class=\"number\">2</span>;</div><div class=\"line\">$test3-&gt;val = <span class=\"number\">3</span>;</div><div class=\"line\"><span class=\"keyword\">echo</span> $test1-&gt;val . $test2-&gt;val . $test3-&gt;val;   <span class=\"comment\">// 123</span></div></pre></td></tr></table></figure>\n<p>较之前的实现，该类在以下几处做了扩展：</p>\n<ul>\n<li>通过init方法，赋予子类初始化的能力</li>\n<li>可选的Needle，在指明Needle时，返回对应的单例，实现了复用类的能力</li>\n</ul>\n<p><a name=\"%E5%AF%B9%E9%9A%90%E8%97%8F%E4%BE%9D%E8%B5%96%E7%9A%84%E8%A7%A3%E9%87%8A\"></a></p>\n<h2 id=\"对隐藏依赖的解释\"><a href=\"#对隐藏依赖的解释\" class=\"headerlink\" title=\"对隐藏依赖的解释\"></a>对隐藏依赖的解释</h2><p>现代化的PHP应用采用autoload方法加载类，这对单例类来说似乎非常友好。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> \\<span class=\"title\">namespace</span>\\<span class=\"title\">to</span>\\<span class=\"title\">this</span>\\<span class=\"title\">class</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"title\">use</span> \\<span class=\"title\">class1</span>\\<span class=\"title\">in</span>\\<span class=\"title\">some</span>\\<span class=\"title\">namespace</span>;</div><div class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">class22</span>\\<span class=\"title\">in</span>\\<span class=\"title\">some</span>\\<span class=\"title\">namespace</span>;</div><div class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">Singleton</span>\\<span class=\"title\">in</span>\\<span class=\"title\">some</span>\\<span class=\"title\">namespace</span>;</div><div class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">class99</span>\\<span class=\"title\">in</span>\\<span class=\"title\">some</span>\\<span class=\"title\">namespace</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> val1;</div><div class=\"line\">    <span class=\"keyword\">public</span> val2;</div><div class=\"line\">    <span class=\"keyword\">public</span> val99;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func1</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func2</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// some code goes here</span></div><div class=\"line\">        $var = Singleton::getInstance();</div><div class=\"line\">        $var-&gt;doSomeThing();</div><div class=\"line\">        <span class=\"comment\">// some other code</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func99</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这个类文件中包含了命名空间声明，使用该类时，PHP会自动加载单例类的依赖，但这并不意味着不存在依赖。</p>\n<p>设想这么一种情况：</p>\n<ul>\n<li>单例类S用来保存数据库连接</li>\n<li>类A会为S注册数据库连接</li>\n<li>类B会利用S操作数据库</li>\n</ul>\n<p>如果A的实现者忘记了为S注册数据库连接，那么B操作数据库失败时，就只能去单例类S找原因，而真正的原因则藏在A中，可怜的B甚至不知道A的存在。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>单例最重要的方面在于对创建示例的限制能力。如果不这样做，潜在的多个实例将被创建，因而造成严重破坏</p>\n</blockquote>\n<p>如果在实例化时将类保存在全局变量，那么迟早会发生冲突。单例模式是一种对于全局变量的改进，可以保证全局只有一个单例类。</p>\n<p>目录：<br><!-- MarkdownTOC --></p>\n<ul>\n<li><a href=\"#%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%BE%8B%E7%B1%BB\">一个简单的单例类</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98\">解决代码复用的问题</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8traits\">使用Traits</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF\">使用继承</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E5%A4%8D%E7%94%A8%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98\">解决复用类的问题</a></li>\n<li><a href=\"#%E5%AF%B9%E9%9A%90%E8%97%8F%E4%BE%9D%E8%B5%96%E7%9A%84%E8%A7%A3%E9%87%8A\">对隐藏依赖的解释</a></li>\n</ul>\n<!-- /MarkdownTOC -->","more":"<p><a name=\"%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%BE%8B%E7%B1%BB\"></a></p>\n<h2 id=\"一个简单的单例类\"><a href=\"#一个简单的单例类\" class=\"headerlink\" title=\"一个简单的单例类\"></a>一个简单的单例类</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">// This static variable stores this Singleton itself</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $_instance = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor private to prevent `new` method to create Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// do something here</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Prevent `clone` method to copy a Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// The only way to get this Singleton</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_instance)) &#123;</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instance = <span class=\"keyword\">new</span> Singleton();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$_instance;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$test = Singleton::getInstance();</div><div class=\"line\">$test-&gt;val = <span class=\"number\">1</span>;</div><div class=\"line\">$test2 = Singleton::getInstance();</div><div class=\"line\"><span class=\"keyword\">echo</span> $test2-&gt;val;   <span class=\"comment\">// 1</span></div></pre></td></tr></table></figure>\n<p>上面实现了最原始的单例类：</p>\n<ul>\n<li>通过一个私有的静态变量保存自身</li>\n<li>私有化构造函数和克隆函数，使该类仅能从该类自身内部创建</li>\n<li>开放getInstance接口，在初次获取单例时创建单例并调用构造函数，之后始终返回该单例</li>\n</ul>\n<p>但同时也产生了一些问题：</p>\n<ul>\n<li>代码复用。两个单例类仅在构造时有较大差异时，是否只能拷贝代码？(比如连接两个不同的数据库)</li>\n<li>重用类。当需要同一个类的两个单例时，似乎无能为力。(比如需要同一数据库的两个独立连接)</li>\n<li>可能隐藏依赖。如果别的类中调用了单例类，这种依赖十分隐蔽。</li>\n</ul>\n<p><a name=\"%E8%A7%A3%E5%86%B3%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98\"></a></p>\n<h2 id=\"解决代码复用的问题\"><a href=\"#解决代码复用的问题\" class=\"headerlink\" title=\"解决代码复用的问题\"></a>解决代码复用的问题</h2><p>两个类只在构造函数有所不同，其他方法和属性基本相似，此时有两种解决方法：</p>\n<ul>\n<li>使用Traits</li>\n<li>继承</li>\n</ul>\n<p><a name=\"%E4%BD%BF%E7%94%A8traits\"></a></p>\n<h3 id=\"使用Traits\"><a href=\"#使用Traits\" class=\"headerlink\" title=\"使用Traits\"></a>使用Traits</h3><p>Tarits的最基本形式被认为是一种辅助编译器的复制粘贴技术。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">trait</span> Singleton</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">// This static variable stores this Singleton itself</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $_instance = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Prevent `clone` method to copy a Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// The only way to get this Singleton</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_instance)) &#123;</div><div class=\"line\">            $class = <span class=\"keyword\">__CLASS__</span>;</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instance = <span class=\"keyword\">new</span> $class();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$_instance;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Some common methods goes here</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_1</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">Singleton</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor private to prevent `new` method to create Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// do something here</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_2</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">Singleton</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor private to prevent `new` method to create Singleton</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// do aother thing here</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Traits通过动态检测调用getInstance方法时的类，区分两个单例类，调用他们不同的构造方法，但同时又可以在trait结构体中实现相同的属性和方法。</p>\n<p>但是这种实现无法解决重用类的问题，如果需要两个Singleton_1的实例，Traits将束手无策。</p>\n<p><a name=\"%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF\"></a></p>\n<h3 id=\"使用继承\"><a href=\"#使用继承\" class=\"headerlink\" title=\"使用继承\"></a>使用继承</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> array [instanceNeedle =&gt; instance]</span></div><div class=\"line\"><span class=\"comment\">     * instanceNeedle equals \"className\".</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $_instanceMap;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor protected either to prevent `new` method or to grant access to its implementer</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Either to prevent `clone` method or to grant access to its implementer</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// The only way to get a Singleton</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        $class = get_called_class();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle])) &#123;</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle] = <span class=\"keyword\">new</span> $class();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_1</span> <span class=\"keyword\">extends</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $val = <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_2</span> <span class=\"keyword\">extends</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $val = <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$test1 = Singleton_1::getInstance();</div><div class=\"line\">$test2 = Singleton_2::getInstance();</div><div class=\"line\">$test1-&gt;val = <span class=\"number\">1</span>;</div><div class=\"line\">$test2-&gt;val = <span class=\"number\">2</span>;</div><div class=\"line\"><span class=\"keyword\">echo</span> $test1-&gt;val . $test2-&gt;val;   <span class=\"comment\">// 12</span></div></pre></td></tr></table></figure>\n<p>通过继承实现有以下要点：</p>\n<ul>\n<li>通过一个私有的静态数组保存单例类的映射</li>\n<li>受保护的构造函数和克隆函数，使该类可以从抽象类创建而不能从外部环境创建</li>\n<li>开放getInstance接口，初次获取某一单例时创建单例并调用构造函数，然后将其保存至数组中供将来使用</li>\n</ul>\n<p>接下来我们可以扩展该抽象，使其可以复用类</p>\n<p><a name=\"%E8%A7%A3%E5%86%B3%E5%A4%8D%E7%94%A8%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98\"></a></p>\n<h2 id=\"解决复用类的问题\"><a href=\"#解决复用类的问题\" class=\"headerlink\" title=\"解决复用类的问题\"></a>解决复用类的问题</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> array [instanceNeedle =&gt; instance]</span></div><div class=\"line\"><span class=\"comment\">     * instanceNeedle equals \"className\" (default) or \"className/instanceNeedle\" (specified instanceNeedle).</span></div><div class=\"line\"><span class=\"comment\">     * all instanceNeedle will be saved in lower case, so it's case insensitive.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $_instanceMap;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Make the constructor protected either to prevent `new` method or to grant access to its implementer</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Either to prevent `clone` method or to grant access to its implementer</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Grant its implementer a power to init itself</span></div><div class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// The only way to get a Singleton</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">($instanceNeedle = <span class=\"string\">''</span>)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        $class = get_called_class();</div><div class=\"line\">        $instanceNeedle = <span class=\"keyword\">empty</span>($instanceNeedle) ? $class : $class . <span class=\"string\">'/'</span> . $instanceNeedle;</div><div class=\"line\">        $instanceNeedle = strtolower($instanceNeedle);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle])) &#123;</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle] = <span class=\"keyword\">new</span> $class();</div><div class=\"line\">            <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle]-&gt;init();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$_instanceMap[$instanceNeedle];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_1</span> <span class=\"keyword\">extends</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $val = <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton_2</span> <span class=\"keyword\">extends</span> <span class=\"title\">SingletonClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $val = <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$test1 = Singleton_1::getInstance();</div><div class=\"line\">$test2 = Singleton_2::getInstance();</div><div class=\"line\">$test3 = Singleton_2::getInstance(<span class=\"string\">'test2'</span>);</div><div class=\"line\">$test1-&gt;val = <span class=\"number\">1</span>;</div><div class=\"line\">$test2-&gt;val = <span class=\"number\">2</span>;</div><div class=\"line\">$test3-&gt;val = <span class=\"number\">3</span>;</div><div class=\"line\"><span class=\"keyword\">echo</span> $test1-&gt;val . $test2-&gt;val . $test3-&gt;val;   <span class=\"comment\">// 123</span></div></pre></td></tr></table></figure>\n<p>较之前的实现，该类在以下几处做了扩展：</p>\n<ul>\n<li>通过init方法，赋予子类初始化的能力</li>\n<li>可选的Needle，在指明Needle时，返回对应的单例，实现了复用类的能力</li>\n</ul>\n<p><a name=\"%E5%AF%B9%E9%9A%90%E8%97%8F%E4%BE%9D%E8%B5%96%E7%9A%84%E8%A7%A3%E9%87%8A\"></a></p>\n<h2 id=\"对隐藏依赖的解释\"><a href=\"#对隐藏依赖的解释\" class=\"headerlink\" title=\"对隐藏依赖的解释\"></a>对隐藏依赖的解释</h2><p>现代化的PHP应用采用autoload方法加载类，这对单例类来说似乎非常友好。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> \\<span class=\"title\">namespace</span>\\<span class=\"title\">to</span>\\<span class=\"title\">this</span>\\<span class=\"title\">class</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"title\">use</span> \\<span class=\"title\">class1</span>\\<span class=\"title\">in</span>\\<span class=\"title\">some</span>\\<span class=\"title\">namespace</span>;</div><div class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">class22</span>\\<span class=\"title\">in</span>\\<span class=\"title\">some</span>\\<span class=\"title\">namespace</span>;</div><div class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">Singleton</span>\\<span class=\"title\">in</span>\\<span class=\"title\">some</span>\\<span class=\"title\">namespace</span>;</div><div class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">class99</span>\\<span class=\"title\">in</span>\\<span class=\"title\">some</span>\\<span class=\"title\">namespace</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> val1;</div><div class=\"line\">    <span class=\"keyword\">public</span> val2;</div><div class=\"line\">    <span class=\"keyword\">public</span> val99;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func1</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func2</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// some code goes here</span></div><div class=\"line\">        $var = Singleton::getInstance();</div><div class=\"line\">        $var-&gt;doSomeThing();</div><div class=\"line\">        <span class=\"comment\">// some other code</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func99</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这个类文件中包含了命名空间声明，使用该类时，PHP会自动加载单例类的依赖，但这并不意味着不存在依赖。</p>\n<p>设想这么一种情况：</p>\n<ul>\n<li>单例类S用来保存数据库连接</li>\n<li>类A会为S注册数据库连接</li>\n<li>类B会利用S操作数据库</li>\n</ul>\n<p>如果A的实现者忘记了为S注册数据库连接，那么B操作数据库失败时，就只能去单例类S找原因，而真正的原因则藏在A中，可怜的B甚至不知道A的存在。</p>"},{"title":"PHP观察者模式+工厂模式组合应用","date":"2017-07-01T16:00:00.000Z","_content":"\n工厂模式把类的创建者和创建的类分离开来，负责产生正确的被观察对象，然后控制器将观察者绑定在需要被观察的对象上。采用这种组合的好处是类间的关系十分松散，可以灵活应对需求的变更：\n- 需求功能的增减（如增加某个日志、增加某些监管）\n- 需求类型的增减（如扩展某种类、新增一些类）\n- 按照接口编程，控制器需要改动的代码很少\n\n目录：\n<!-- MarkdownTOC -->\n\n- [定义抽象request类型](#%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1request%E7%B1%BB%E5%9E%8B)\n- [定义观察者和被观察者类型](#%E5%AE%9A%E4%B9%89%E8%A7%82%E5%AF%9F%E8%80%85%E5%92%8C%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85%E7%B1%BB%E5%9E%8B)\n- [扩展request为http类型](#%E6%89%A9%E5%B1%95request%E4%B8%BAhttp%E7%B1%BB%E5%9E%8B)\n- [构造观察者](#%E6%9E%84%E9%80%A0%E8%A7%82%E5%AF%9F%E8%80%85)\n- [定义工厂管理者](#%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85)\n- [定义工厂接口](#%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E6%8E%A5%E5%8F%A3)\n- [构造request工厂管理者](#%E6%9E%84%E9%80%A0request%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85)\n- [构造Request_http工厂](#%E6%9E%84%E9%80%A0requesthttp%E5%B7%A5%E5%8E%82)\n- [控制器](#%E6%8E%A7%E5%88%B6%E5%99%A8)\n\n<!-- /MarkdownTOC -->\n\n<!-- more -->\n\n下面用request类（被创建的类、被观察对象）和一些辅助类（观察者、工厂管理者、工厂）做说明。\n\n<a name=\"%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1request%E7%B1%BB%E5%9E%8B\"></a>\n## 定义抽象request类型\n\nrequest可能来自http，也可能来自app或者其他请求，采用`$_type`标明。\n\n所有的request实体均需继承自该类。\n\n```php\nabstract class Request\n{\n    protected $_type;\n    \n    public function getType()\n    {\n        return $this->_type;\n    }\n}\n```\n\n<a name=\"%E5%AE%9A%E4%B9%89%E8%A7%82%E5%AF%9F%E8%80%85%E5%92%8C%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85%E7%B1%BB%E5%9E%8B\"></a>\n## 定义观察者和被观察者类型\n\n被观察者接口：\n\n```php\ninterface IObservable\n{\n    public function attach(IObserver $observer);\n    public function detach(IObserver $observer);\n    public function notify();\n}\n```\n\nattach用于绑定观察者，detach用于解绑，notify用于触发观察者。\n\n观察者接口：\n\n```php\ninterface IObserver\n{\n    public function update(IObservable $observable);\n}\n```\n\nupdate用于观察者实现自身的行为，或者更新被观察者的状态。\n\n<a name=\"%E6%89%A9%E5%B1%95request%E4%B8%BAhttp%E7%B1%BB%E5%9E%8B\"></a>\n## 扩展request为http类型\n\n继承Request对象，并实现被观察者接口。\n\n其实也可以将上面的IObservable接口定义为抽象类，以减少attach、detach以及notify这部分代码的重复。\n\n请注意notify方法，该方法依次调用观察者的update方法，并 **传递被观察者本身** 作为参数，这也是观察者模式最重要的一点。\n\n```php\nclass Request_http extends Request implements IObservable\n{\n    private $_observers;\n    \n    public function __construct()\n    {\n        $this->_type = 'http';\n        $this->_observers = array();\n    }\n\n    public function attach(IObserver $observer)\n    {\n        if (!in_array($observer, $this->_observers)) {\n            $this->_observers[] = $observer;\n        }\n    }\n    public function detach(IObserver $observer)\n    {\n        if (in_array($observer, $this->_observers)) {\n            $newobservers = array();\n            foreach ($this->_observers as $obs) {\n                if ($obs !== $observer) {\n                    $newobservers[] = $obs;\n                }\n            }\n            $this->_observers = $newobservers;\n        }\n        \n    }\n    public function notify()\n    {\n        foreach ($this->_observers as $obs) {\n            $obs->update($this);\n        }\n    }\n}\n```\n\n<a name=\"%E6%9E%84%E9%80%A0%E8%A7%82%E5%AF%9F%E8%80%85\"></a>\n## 构造观察者\n\n构造一个简单的安全处理模块。\n\n```php\nclass RequestSecurityObserver implements IObserver\n{\n    public function update(IObservable $observable)\n    {\n        // security handler\n        // do some check here\n    }\n}\n```\n\n至此，我们已经实现了一个Request_http类，作为被观察对象。以及一个RequestSecurityObserver类，作为观察者。\n\n下面实现工厂模式，构造Request_http类，并返回该类给控制器。\n\n<a name=\"%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\"></a>\n## 定义工厂管理者\n\n为了方便对不同request的特殊处理，应该为每一个类构造对应的工厂，因此需要一个管理者来操作正确的工厂。\n\n每组类型的工厂都可能需要一个管理者（如request、database、view），因此只需抽象的定义一个getObject方法即可。\n\n```php\ninterface IGeneraterManager\n{\n    public function getObject();\n}\n```\n\n<a name=\"%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E6%8E%A5%E5%8F%A3\"></a>\n## 定义工厂接口\n\n工厂方法也只定义了一个generate方法，用于生成该工厂对应的类。\n\n```php\ninterface IGenerater\n{\n    public function generate();\n}\n```\n\n<a name=\"%E6%9E%84%E9%80%A0request%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\"></a>\n## 构造request工厂管理者\n\n`IGeneraterManager`忽视了各类工厂管理者的具体职能，此处需要赋予request工厂管理者 **特定** 的职能。\n\n这里只简要地加以说明。\n\n该工厂管理者的构造函数引入了Request抽象类，强制所有的工厂返回Request类型，这属于它的特定职能。\n\n```php\nclass RequestGeneraterManager implements IGeneraterManager\n{\n    private $_type;\n    private $_generater;\n\n    public function __construct()\n    {\n        $this->_determineType();\n        $this->_determineGenerater();\n        \n        include_once 'Request.abstract.php';\n    }\n\n    public function getObject()\n    {\n        return $this->_generater->generate();\n    }\n\n    private function _determineType()\n    {\n        // should do some check to determine request type\n        // but for clear, we just name a type for this here\n        $this->_type = 'http';\n    }\n    private function _determineGenerater()\n    {\n        switch ($this->_type) {\n            case 'http':\n                include_once 'RequestGenerater_http.class.php';\n                $this->_generater = new RequestGenerater_http();\n        }\n    }\n}\n```\n\n<a name=\"%E6%9E%84%E9%80%A0requesthttp%E5%B7%A5%E5%8E%82\"></a>\n## 构造Request_http工厂\n\n这个工厂返回Request_http类型，它还有权决定返回哪种Request_http类型，可能是Request_http_mobile以适应移动终端，也可能是Request_http_pc以适应桌面端。\n\n为了简单起见，这里只返回最基本的Request_http类型。\n\n```php\nclass RequestGenerater_http implements IGenerater\n{\n    public function generate()\n    {\n        include_once 'Request_http.class.php';\n        return new Request_http();\n    }\n}\n```\n\n至此，所有的类已经构造完毕。接下来是控制器的控制流。\n\n<a name=\"%E6%8E%A7%E5%88%B6%E5%99%A8\"></a>\n## 控制器\n\n首先在控制器中引入 *工厂管理者* 和各种 *观察者*。\n\n然后调用管理者的`getObject`方法获得正确的Request类，它同时也是被观察对象。\n\n接着将各种观察者绑定到Request上，或者解绑。\n\n最后通知观察者即可。\n\n```php\ninclude_once ROOT.'/models/datatype/request/RequestGeneraterManager.class.php';\ninclude_once ROOT.'/models/datatype/request/RequestSecurityObserver.class.php';\ninclude_once ROOT.'/models/datatype/request/RequestxxxxxxxxObserver.class.php';\ninclude_once ROOT.'/models/datatype/request/RequestxxxxxxxxObserver.class.php';\n$request_generater_manager = new RequestGeneraterManager();\n$request = $request_generater_manager->getObject();\n$request->attach(new RequestSecurityObserver());\n$request->attach(new RequestxxxxxxxxObserver());\n$request->detach(new RequestxxxxxxxxObserver());\n$request->notify();\n```\n\n通过以上一系列的定义，Request类已经非常灵活，后期无论是新增功能（新建观察者），还是新增类型（新建工厂），都可以轻松应付。\n\n新增功能时，只要改动控制器的attach和detach即可。\n新增类型时，只要新建该类型，在工厂中做与其对应的处理即可。\n\n下面是程序流：\n\n1. 控制器实例化工厂管理者RequestGeneraterManager\n2. 控制器调用管理者的getObject方法获得Request对象\n    1. 工厂管理者调用适当工厂的generate方法\n    2. 工厂生成相应对象，并赋予其合适的属性\n3. 控制器为Request对象绑定各种观察者\n4. 控制器调用Request的notify方法，使观察者依次操作Request对象\n5. 控制器重新拥有Request对象的控制权","source":"_posts/php-observer+factory.md","raw":"---\ntitle: PHP观察者模式+工厂模式组合应用\ndate: 2017-07-02\ntag: [php, 设计模式]\n---\n\n工厂模式把类的创建者和创建的类分离开来，负责产生正确的被观察对象，然后控制器将观察者绑定在需要被观察的对象上。采用这种组合的好处是类间的关系十分松散，可以灵活应对需求的变更：\n- 需求功能的增减（如增加某个日志、增加某些监管）\n- 需求类型的增减（如扩展某种类、新增一些类）\n- 按照接口编程，控制器需要改动的代码很少\n\n目录：\n<!-- MarkdownTOC -->\n\n- [定义抽象request类型](#%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1request%E7%B1%BB%E5%9E%8B)\n- [定义观察者和被观察者类型](#%E5%AE%9A%E4%B9%89%E8%A7%82%E5%AF%9F%E8%80%85%E5%92%8C%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85%E7%B1%BB%E5%9E%8B)\n- [扩展request为http类型](#%E6%89%A9%E5%B1%95request%E4%B8%BAhttp%E7%B1%BB%E5%9E%8B)\n- [构造观察者](#%E6%9E%84%E9%80%A0%E8%A7%82%E5%AF%9F%E8%80%85)\n- [定义工厂管理者](#%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85)\n- [定义工厂接口](#%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E6%8E%A5%E5%8F%A3)\n- [构造request工厂管理者](#%E6%9E%84%E9%80%A0request%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85)\n- [构造Request_http工厂](#%E6%9E%84%E9%80%A0requesthttp%E5%B7%A5%E5%8E%82)\n- [控制器](#%E6%8E%A7%E5%88%B6%E5%99%A8)\n\n<!-- /MarkdownTOC -->\n\n<!-- more -->\n\n下面用request类（被创建的类、被观察对象）和一些辅助类（观察者、工厂管理者、工厂）做说明。\n\n<a name=\"%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1request%E7%B1%BB%E5%9E%8B\"></a>\n## 定义抽象request类型\n\nrequest可能来自http，也可能来自app或者其他请求，采用`$_type`标明。\n\n所有的request实体均需继承自该类。\n\n```php\nabstract class Request\n{\n    protected $_type;\n    \n    public function getType()\n    {\n        return $this->_type;\n    }\n}\n```\n\n<a name=\"%E5%AE%9A%E4%B9%89%E8%A7%82%E5%AF%9F%E8%80%85%E5%92%8C%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85%E7%B1%BB%E5%9E%8B\"></a>\n## 定义观察者和被观察者类型\n\n被观察者接口：\n\n```php\ninterface IObservable\n{\n    public function attach(IObserver $observer);\n    public function detach(IObserver $observer);\n    public function notify();\n}\n```\n\nattach用于绑定观察者，detach用于解绑，notify用于触发观察者。\n\n观察者接口：\n\n```php\ninterface IObserver\n{\n    public function update(IObservable $observable);\n}\n```\n\nupdate用于观察者实现自身的行为，或者更新被观察者的状态。\n\n<a name=\"%E6%89%A9%E5%B1%95request%E4%B8%BAhttp%E7%B1%BB%E5%9E%8B\"></a>\n## 扩展request为http类型\n\n继承Request对象，并实现被观察者接口。\n\n其实也可以将上面的IObservable接口定义为抽象类，以减少attach、detach以及notify这部分代码的重复。\n\n请注意notify方法，该方法依次调用观察者的update方法，并 **传递被观察者本身** 作为参数，这也是观察者模式最重要的一点。\n\n```php\nclass Request_http extends Request implements IObservable\n{\n    private $_observers;\n    \n    public function __construct()\n    {\n        $this->_type = 'http';\n        $this->_observers = array();\n    }\n\n    public function attach(IObserver $observer)\n    {\n        if (!in_array($observer, $this->_observers)) {\n            $this->_observers[] = $observer;\n        }\n    }\n    public function detach(IObserver $observer)\n    {\n        if (in_array($observer, $this->_observers)) {\n            $newobservers = array();\n            foreach ($this->_observers as $obs) {\n                if ($obs !== $observer) {\n                    $newobservers[] = $obs;\n                }\n            }\n            $this->_observers = $newobservers;\n        }\n        \n    }\n    public function notify()\n    {\n        foreach ($this->_observers as $obs) {\n            $obs->update($this);\n        }\n    }\n}\n```\n\n<a name=\"%E6%9E%84%E9%80%A0%E8%A7%82%E5%AF%9F%E8%80%85\"></a>\n## 构造观察者\n\n构造一个简单的安全处理模块。\n\n```php\nclass RequestSecurityObserver implements IObserver\n{\n    public function update(IObservable $observable)\n    {\n        // security handler\n        // do some check here\n    }\n}\n```\n\n至此，我们已经实现了一个Request_http类，作为被观察对象。以及一个RequestSecurityObserver类，作为观察者。\n\n下面实现工厂模式，构造Request_http类，并返回该类给控制器。\n\n<a name=\"%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\"></a>\n## 定义工厂管理者\n\n为了方便对不同request的特殊处理，应该为每一个类构造对应的工厂，因此需要一个管理者来操作正确的工厂。\n\n每组类型的工厂都可能需要一个管理者（如request、database、view），因此只需抽象的定义一个getObject方法即可。\n\n```php\ninterface IGeneraterManager\n{\n    public function getObject();\n}\n```\n\n<a name=\"%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E6%8E%A5%E5%8F%A3\"></a>\n## 定义工厂接口\n\n工厂方法也只定义了一个generate方法，用于生成该工厂对应的类。\n\n```php\ninterface IGenerater\n{\n    public function generate();\n}\n```\n\n<a name=\"%E6%9E%84%E9%80%A0request%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\"></a>\n## 构造request工厂管理者\n\n`IGeneraterManager`忽视了各类工厂管理者的具体职能，此处需要赋予request工厂管理者 **特定** 的职能。\n\n这里只简要地加以说明。\n\n该工厂管理者的构造函数引入了Request抽象类，强制所有的工厂返回Request类型，这属于它的特定职能。\n\n```php\nclass RequestGeneraterManager implements IGeneraterManager\n{\n    private $_type;\n    private $_generater;\n\n    public function __construct()\n    {\n        $this->_determineType();\n        $this->_determineGenerater();\n        \n        include_once 'Request.abstract.php';\n    }\n\n    public function getObject()\n    {\n        return $this->_generater->generate();\n    }\n\n    private function _determineType()\n    {\n        // should do some check to determine request type\n        // but for clear, we just name a type for this here\n        $this->_type = 'http';\n    }\n    private function _determineGenerater()\n    {\n        switch ($this->_type) {\n            case 'http':\n                include_once 'RequestGenerater_http.class.php';\n                $this->_generater = new RequestGenerater_http();\n        }\n    }\n}\n```\n\n<a name=\"%E6%9E%84%E9%80%A0requesthttp%E5%B7%A5%E5%8E%82\"></a>\n## 构造Request_http工厂\n\n这个工厂返回Request_http类型，它还有权决定返回哪种Request_http类型，可能是Request_http_mobile以适应移动终端，也可能是Request_http_pc以适应桌面端。\n\n为了简单起见，这里只返回最基本的Request_http类型。\n\n```php\nclass RequestGenerater_http implements IGenerater\n{\n    public function generate()\n    {\n        include_once 'Request_http.class.php';\n        return new Request_http();\n    }\n}\n```\n\n至此，所有的类已经构造完毕。接下来是控制器的控制流。\n\n<a name=\"%E6%8E%A7%E5%88%B6%E5%99%A8\"></a>\n## 控制器\n\n首先在控制器中引入 *工厂管理者* 和各种 *观察者*。\n\n然后调用管理者的`getObject`方法获得正确的Request类，它同时也是被观察对象。\n\n接着将各种观察者绑定到Request上，或者解绑。\n\n最后通知观察者即可。\n\n```php\ninclude_once ROOT.'/models/datatype/request/RequestGeneraterManager.class.php';\ninclude_once ROOT.'/models/datatype/request/RequestSecurityObserver.class.php';\ninclude_once ROOT.'/models/datatype/request/RequestxxxxxxxxObserver.class.php';\ninclude_once ROOT.'/models/datatype/request/RequestxxxxxxxxObserver.class.php';\n$request_generater_manager = new RequestGeneraterManager();\n$request = $request_generater_manager->getObject();\n$request->attach(new RequestSecurityObserver());\n$request->attach(new RequestxxxxxxxxObserver());\n$request->detach(new RequestxxxxxxxxObserver());\n$request->notify();\n```\n\n通过以上一系列的定义，Request类已经非常灵活，后期无论是新增功能（新建观察者），还是新增类型（新建工厂），都可以轻松应付。\n\n新增功能时，只要改动控制器的attach和detach即可。\n新增类型时，只要新建该类型，在工厂中做与其对应的处理即可。\n\n下面是程序流：\n\n1. 控制器实例化工厂管理者RequestGeneraterManager\n2. 控制器调用管理者的getObject方法获得Request对象\n    1. 工厂管理者调用适当工厂的generate方法\n    2. 工厂生成相应对象，并赋予其合适的属性\n3. 控制器为Request对象绑定各种观察者\n4. 控制器调用Request的notify方法，使观察者依次操作Request对象\n5. 控制器重新拥有Request对象的控制权","slug":"php-observer+factory","published":1,"updated":"2017-10-27T14:15:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9a0ztlg0004n9s8feoms282","content":"<p>工厂模式把类的创建者和创建的类分离开来，负责产生正确的被观察对象，然后控制器将观察者绑定在需要被观察的对象上。采用这种组合的好处是类间的关系十分松散，可以灵活应对需求的变更：</p>\n<ul>\n<li>需求功能的增减（如增加某个日志、增加某些监管）</li>\n<li>需求类型的增减（如扩展某种类、新增一些类）</li>\n<li>按照接口编程，控制器需要改动的代码很少</li>\n</ul>\n<p>目录：<br><!-- MarkdownTOC --></p>\n<ul>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1request%E7%B1%BB%E5%9E%8B\">定义抽象request类型</a></li>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E8%A7%82%E5%AF%9F%E8%80%85%E5%92%8C%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85%E7%B1%BB%E5%9E%8B\">定义观察者和被观察者类型</a></li>\n<li><a href=\"#%E6%89%A9%E5%B1%95request%E4%B8%BAhttp%E7%B1%BB%E5%9E%8B\">扩展request为http类型</a></li>\n<li><a href=\"#%E6%9E%84%E9%80%A0%E8%A7%82%E5%AF%9F%E8%80%85\">构造观察者</a></li>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\">定义工厂管理者</a></li>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E6%8E%A5%E5%8F%A3\">定义工厂接口</a></li>\n<li><a href=\"#%E6%9E%84%E9%80%A0request%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\">构造request工厂管理者</a></li>\n<li><a href=\"#%E6%9E%84%E9%80%A0requesthttp%E5%B7%A5%E5%8E%82\">构造Request_http工厂</a></li>\n<li><a href=\"#%E6%8E%A7%E5%88%B6%E5%99%A8\">控制器</a></li>\n</ul>\n<!-- /MarkdownTOC -->\n<a id=\"more\"></a>\n<p>下面用request类（被创建的类、被观察对象）和一些辅助类（观察者、工厂管理者、工厂）做说明。</p>\n<p><a name=\"%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1request%E7%B1%BB%E5%9E%8B\"></a></p>\n<h2 id=\"定义抽象request类型\"><a href=\"#定义抽象request类型\" class=\"headerlink\" title=\"定义抽象request类型\"></a>定义抽象request类型</h2><p>request可能来自http，也可能来自app或者其他请求，采用<code>$_type</code>标明。</p>\n<p>所有的request实体均需继承自该类。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Request</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> $_type;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;_type;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E5%AE%9A%E4%B9%89%E8%A7%82%E5%AF%9F%E8%80%85%E5%92%8C%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85%E7%B1%BB%E5%9E%8B\"></a></p>\n<h2 id=\"定义观察者和被观察者类型\"><a href=\"#定义观察者和被观察者类型\" class=\"headerlink\" title=\"定义观察者和被观察者类型\"></a>定义观察者和被观察者类型</h2><p>被观察者接口：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IObservable</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">attach</span><span class=\"params\">(IObserver $observer)</span></span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">detach</span><span class=\"params\">(IObserver $observer)</span></span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">notify</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>attach用于绑定观察者，detach用于解绑，notify用于触发观察者。</p>\n<p>观察者接口：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IObserver</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span><span class=\"params\">(IObservable $observable)</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>update用于观察者实现自身的行为，或者更新被观察者的状态。</p>\n<p><a name=\"%E6%89%A9%E5%B1%95request%E4%B8%BAhttp%E7%B1%BB%E5%9E%8B\"></a></p>\n<h2 id=\"扩展request为http类型\"><a href=\"#扩展request为http类型\" class=\"headerlink\" title=\"扩展request为http类型\"></a>扩展request为http类型</h2><p>继承Request对象，并实现被观察者接口。</p>\n<p>其实也可以将上面的IObservable接口定义为抽象类，以减少attach、detach以及notify这部分代码的重复。</p>\n<p>请注意notify方法，该方法依次调用观察者的update方法，并 <strong>传递被观察者本身</strong> 作为参数，这也是观察者模式最重要的一点。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Request_http</span> <span class=\"keyword\">extends</span> <span class=\"title\">Request</span> <span class=\"keyword\">implements</span> <span class=\"title\">IObservable</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_observers;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_type = <span class=\"string\">'http'</span>;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_observers = <span class=\"keyword\">array</span>();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">attach</span><span class=\"params\">(IObserver $observer)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!in_array($observer, <span class=\"keyword\">$this</span>-&gt;_observers)) &#123;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_observers[] = $observer;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">detach</span><span class=\"params\">(IObserver $observer)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (in_array($observer, <span class=\"keyword\">$this</span>-&gt;_observers)) &#123;</div><div class=\"line\">            $newobservers = <span class=\"keyword\">array</span>();</div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_observers <span class=\"keyword\">as</span> $obs) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> ($obs !== $observer) &#123;</div><div class=\"line\">                    $newobservers[] = $obs;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_observers = $newobservers;</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">notify</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_observers <span class=\"keyword\">as</span> $obs) &#123;</div><div class=\"line\">            $obs-&gt;update(<span class=\"keyword\">$this</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E6%9E%84%E9%80%A0%E8%A7%82%E5%AF%9F%E8%80%85\"></a></p>\n<h2 id=\"构造观察者\"><a href=\"#构造观察者\" class=\"headerlink\" title=\"构造观察者\"></a>构造观察者</h2><p>构造一个简单的安全处理模块。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RequestSecurityObserver</span> <span class=\"keyword\">implements</span> <span class=\"title\">IObserver</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span><span class=\"params\">(IObservable $observable)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// security handler</span></div><div class=\"line\">        <span class=\"comment\">// do some check here</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>至此，我们已经实现了一个Request_http类，作为被观察对象。以及一个RequestSecurityObserver类，作为观察者。</p>\n<p>下面实现工厂模式，构造Request_http类，并返回该类给控制器。</p>\n<p><a name=\"%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\"></a></p>\n<h2 id=\"定义工厂管理者\"><a href=\"#定义工厂管理者\" class=\"headerlink\" title=\"定义工厂管理者\"></a>定义工厂管理者</h2><p>为了方便对不同request的特殊处理，应该为每一个类构造对应的工厂，因此需要一个管理者来操作正确的工厂。</p>\n<p>每组类型的工厂都可能需要一个管理者（如request、database、view），因此只需抽象的定义一个getObject方法即可。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IGeneraterManager</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getObject</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E6%8E%A5%E5%8F%A3\"></a></p>\n<h2 id=\"定义工厂接口\"><a href=\"#定义工厂接口\" class=\"headerlink\" title=\"定义工厂接口\"></a>定义工厂接口</h2><p>工厂方法也只定义了一个generate方法，用于生成该工厂对应的类。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IGenerater</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E6%9E%84%E9%80%A0request%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\"></a></p>\n<h2 id=\"构造request工厂管理者\"><a href=\"#构造request工厂管理者\" class=\"headerlink\" title=\"构造request工厂管理者\"></a>构造request工厂管理者</h2><p><code>IGeneraterManager</code>忽视了各类工厂管理者的具体职能，此处需要赋予request工厂管理者 <strong>特定</strong> 的职能。</p>\n<p>这里只简要地加以说明。</p>\n<p>该工厂管理者的构造函数引入了Request抽象类，强制所有的工厂返回Request类型，这属于它的特定职能。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RequestGeneraterManager</span> <span class=\"keyword\">implements</span> <span class=\"title\">IGeneraterManager</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_type;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_generater;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_determineType();</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_determineGenerater();</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">include_once</span> <span class=\"string\">'Request.abstract.php'</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getObject</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;_generater-&gt;generate();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_determineType</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// should do some check to determine request type</span></div><div class=\"line\">        <span class=\"comment\">// but for clear, we just name a type for this here</span></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_type = <span class=\"string\">'http'</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_determineGenerater</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"keyword\">$this</span>-&gt;_type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'http'</span>:</div><div class=\"line\">                <span class=\"keyword\">include_once</span> <span class=\"string\">'RequestGenerater_http.class.php'</span>;</div><div class=\"line\">                <span class=\"keyword\">$this</span>-&gt;_generater = <span class=\"keyword\">new</span> RequestGenerater_http();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E6%9E%84%E9%80%A0requesthttp%E5%B7%A5%E5%8E%82\"></a></p>\n<h2 id=\"构造Request-http工厂\"><a href=\"#构造Request-http工厂\" class=\"headerlink\" title=\"构造Request_http工厂\"></a>构造Request_http工厂</h2><p>这个工厂返回Request_http类型，它还有权决定返回哪种Request_http类型，可能是Request_http_mobile以适应移动终端，也可能是Request_http_pc以适应桌面端。</p>\n<p>为了简单起见，这里只返回最基本的Request_http类型。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RequestGenerater_http</span> <span class=\"keyword\">implements</span> <span class=\"title\">IGenerater</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">include_once</span> <span class=\"string\">'Request_http.class.php'</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Request_http();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>至此，所有的类已经构造完毕。接下来是控制器的控制流。</p>\n<p><a name=\"%E6%8E%A7%E5%88%B6%E5%99%A8\"></a></p>\n<h2 id=\"控制器\"><a href=\"#控制器\" class=\"headerlink\" title=\"控制器\"></a>控制器</h2><p>首先在控制器中引入 <em>工厂管理者</em> 和各种 <em>观察者</em>。</p>\n<p>然后调用管理者的<code>getObject</code>方法获得正确的Request类，它同时也是被观察对象。</p>\n<p>接着将各种观察者绑定到Request上，或者解绑。</p>\n<p>最后通知观察者即可。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">include_once</span> ROOT.<span class=\"string\">'/models/datatype/request/RequestGeneraterManager.class.php'</span>;</div><div class=\"line\"><span class=\"keyword\">include_once</span> ROOT.<span class=\"string\">'/models/datatype/request/RequestSecurityObserver.class.php'</span>;</div><div class=\"line\"><span class=\"keyword\">include_once</span> ROOT.<span class=\"string\">'/models/datatype/request/RequestxxxxxxxxObserver.class.php'</span>;</div><div class=\"line\"><span class=\"keyword\">include_once</span> ROOT.<span class=\"string\">'/models/datatype/request/RequestxxxxxxxxObserver.class.php'</span>;</div><div class=\"line\">$request_generater_manager = <span class=\"keyword\">new</span> RequestGeneraterManager();</div><div class=\"line\">$request = $request_generater_manager-&gt;getObject();</div><div class=\"line\">$request-&gt;attach(<span class=\"keyword\">new</span> RequestSecurityObserver());</div><div class=\"line\">$request-&gt;attach(<span class=\"keyword\">new</span> RequestxxxxxxxxObserver());</div><div class=\"line\">$request-&gt;detach(<span class=\"keyword\">new</span> RequestxxxxxxxxObserver());</div><div class=\"line\">$request-&gt;notify();</div></pre></td></tr></table></figure>\n<p>通过以上一系列的定义，Request类已经非常灵活，后期无论是新增功能（新建观察者），还是新增类型（新建工厂），都可以轻松应付。</p>\n<p>新增功能时，只要改动控制器的attach和detach即可。<br>新增类型时，只要新建该类型，在工厂中做与其对应的处理即可。</p>\n<p>下面是程序流：</p>\n<ol>\n<li>控制器实例化工厂管理者RequestGeneraterManager</li>\n<li>控制器调用管理者的getObject方法获得Request对象<ol>\n<li>工厂管理者调用适当工厂的generate方法</li>\n<li>工厂生成相应对象，并赋予其合适的属性</li>\n</ol>\n</li>\n<li>控制器为Request对象绑定各种观察者</li>\n<li>控制器调用Request的notify方法，使观察者依次操作Request对象</li>\n<li>控制器重新拥有Request对象的控制权</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>工厂模式把类的创建者和创建的类分离开来，负责产生正确的被观察对象，然后控制器将观察者绑定在需要被观察的对象上。采用这种组合的好处是类间的关系十分松散，可以灵活应对需求的变更：</p>\n<ul>\n<li>需求功能的增减（如增加某个日志、增加某些监管）</li>\n<li>需求类型的增减（如扩展某种类、新增一些类）</li>\n<li>按照接口编程，控制器需要改动的代码很少</li>\n</ul>\n<p>目录：<br><!-- MarkdownTOC --></p>\n<ul>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1request%E7%B1%BB%E5%9E%8B\">定义抽象request类型</a></li>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E8%A7%82%E5%AF%9F%E8%80%85%E5%92%8C%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85%E7%B1%BB%E5%9E%8B\">定义观察者和被观察者类型</a></li>\n<li><a href=\"#%E6%89%A9%E5%B1%95request%E4%B8%BAhttp%E7%B1%BB%E5%9E%8B\">扩展request为http类型</a></li>\n<li><a href=\"#%E6%9E%84%E9%80%A0%E8%A7%82%E5%AF%9F%E8%80%85\">构造观察者</a></li>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\">定义工厂管理者</a></li>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E6%8E%A5%E5%8F%A3\">定义工厂接口</a></li>\n<li><a href=\"#%E6%9E%84%E9%80%A0request%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\">构造request工厂管理者</a></li>\n<li><a href=\"#%E6%9E%84%E9%80%A0requesthttp%E5%B7%A5%E5%8E%82\">构造Request_http工厂</a></li>\n<li><a href=\"#%E6%8E%A7%E5%88%B6%E5%99%A8\">控制器</a></li>\n</ul>\n<!-- /MarkdownTOC -->","more":"<p>下面用request类（被创建的类、被观察对象）和一些辅助类（观察者、工厂管理者、工厂）做说明。</p>\n<p><a name=\"%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1request%E7%B1%BB%E5%9E%8B\"></a></p>\n<h2 id=\"定义抽象request类型\"><a href=\"#定义抽象request类型\" class=\"headerlink\" title=\"定义抽象request类型\"></a>定义抽象request类型</h2><p>request可能来自http，也可能来自app或者其他请求，采用<code>$_type</code>标明。</p>\n<p>所有的request实体均需继承自该类。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Request</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> $_type;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;_type;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E5%AE%9A%E4%B9%89%E8%A7%82%E5%AF%9F%E8%80%85%E5%92%8C%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85%E7%B1%BB%E5%9E%8B\"></a></p>\n<h2 id=\"定义观察者和被观察者类型\"><a href=\"#定义观察者和被观察者类型\" class=\"headerlink\" title=\"定义观察者和被观察者类型\"></a>定义观察者和被观察者类型</h2><p>被观察者接口：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IObservable</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">attach</span><span class=\"params\">(IObserver $observer)</span></span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">detach</span><span class=\"params\">(IObserver $observer)</span></span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">notify</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>attach用于绑定观察者，detach用于解绑，notify用于触发观察者。</p>\n<p>观察者接口：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IObserver</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span><span class=\"params\">(IObservable $observable)</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>update用于观察者实现自身的行为，或者更新被观察者的状态。</p>\n<p><a name=\"%E6%89%A9%E5%B1%95request%E4%B8%BAhttp%E7%B1%BB%E5%9E%8B\"></a></p>\n<h2 id=\"扩展request为http类型\"><a href=\"#扩展request为http类型\" class=\"headerlink\" title=\"扩展request为http类型\"></a>扩展request为http类型</h2><p>继承Request对象，并实现被观察者接口。</p>\n<p>其实也可以将上面的IObservable接口定义为抽象类，以减少attach、detach以及notify这部分代码的重复。</p>\n<p>请注意notify方法，该方法依次调用观察者的update方法，并 <strong>传递被观察者本身</strong> 作为参数，这也是观察者模式最重要的一点。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Request_http</span> <span class=\"keyword\">extends</span> <span class=\"title\">Request</span> <span class=\"keyword\">implements</span> <span class=\"title\">IObservable</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_observers;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_type = <span class=\"string\">'http'</span>;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_observers = <span class=\"keyword\">array</span>();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">attach</span><span class=\"params\">(IObserver $observer)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!in_array($observer, <span class=\"keyword\">$this</span>-&gt;_observers)) &#123;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_observers[] = $observer;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">detach</span><span class=\"params\">(IObserver $observer)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (in_array($observer, <span class=\"keyword\">$this</span>-&gt;_observers)) &#123;</div><div class=\"line\">            $newobservers = <span class=\"keyword\">array</span>();</div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_observers <span class=\"keyword\">as</span> $obs) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> ($obs !== $observer) &#123;</div><div class=\"line\">                    $newobservers[] = $obs;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_observers = $newobservers;</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">notify</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_observers <span class=\"keyword\">as</span> $obs) &#123;</div><div class=\"line\">            $obs-&gt;update(<span class=\"keyword\">$this</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E6%9E%84%E9%80%A0%E8%A7%82%E5%AF%9F%E8%80%85\"></a></p>\n<h2 id=\"构造观察者\"><a href=\"#构造观察者\" class=\"headerlink\" title=\"构造观察者\"></a>构造观察者</h2><p>构造一个简单的安全处理模块。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RequestSecurityObserver</span> <span class=\"keyword\">implements</span> <span class=\"title\">IObserver</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span><span class=\"params\">(IObservable $observable)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// security handler</span></div><div class=\"line\">        <span class=\"comment\">// do some check here</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>至此，我们已经实现了一个Request_http类，作为被观察对象。以及一个RequestSecurityObserver类，作为观察者。</p>\n<p>下面实现工厂模式，构造Request_http类，并返回该类给控制器。</p>\n<p><a name=\"%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\"></a></p>\n<h2 id=\"定义工厂管理者\"><a href=\"#定义工厂管理者\" class=\"headerlink\" title=\"定义工厂管理者\"></a>定义工厂管理者</h2><p>为了方便对不同request的特殊处理，应该为每一个类构造对应的工厂，因此需要一个管理者来操作正确的工厂。</p>\n<p>每组类型的工厂都可能需要一个管理者（如request、database、view），因此只需抽象的定义一个getObject方法即可。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IGeneraterManager</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getObject</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E5%AE%9A%E4%B9%89%E5%B7%A5%E5%8E%82%E6%8E%A5%E5%8F%A3\"></a></p>\n<h2 id=\"定义工厂接口\"><a href=\"#定义工厂接口\" class=\"headerlink\" title=\"定义工厂接口\"></a>定义工厂接口</h2><p>工厂方法也只定义了一个generate方法，用于生成该工厂对应的类。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IGenerater</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E6%9E%84%E9%80%A0request%E5%B7%A5%E5%8E%82%E7%AE%A1%E7%90%86%E8%80%85\"></a></p>\n<h2 id=\"构造request工厂管理者\"><a href=\"#构造request工厂管理者\" class=\"headerlink\" title=\"构造request工厂管理者\"></a>构造request工厂管理者</h2><p><code>IGeneraterManager</code>忽视了各类工厂管理者的具体职能，此处需要赋予request工厂管理者 <strong>特定</strong> 的职能。</p>\n<p>这里只简要地加以说明。</p>\n<p>该工厂管理者的构造函数引入了Request抽象类，强制所有的工厂返回Request类型，这属于它的特定职能。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RequestGeneraterManager</span> <span class=\"keyword\">implements</span> <span class=\"title\">IGeneraterManager</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_type;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_generater;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_determineType();</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_determineGenerater();</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">include_once</span> <span class=\"string\">'Request.abstract.php'</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getObject</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;_generater-&gt;generate();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_determineType</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// should do some check to determine request type</span></div><div class=\"line\">        <span class=\"comment\">// but for clear, we just name a type for this here</span></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_type = <span class=\"string\">'http'</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_determineGenerater</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"keyword\">$this</span>-&gt;_type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'http'</span>:</div><div class=\"line\">                <span class=\"keyword\">include_once</span> <span class=\"string\">'RequestGenerater_http.class.php'</span>;</div><div class=\"line\">                <span class=\"keyword\">$this</span>-&gt;_generater = <span class=\"keyword\">new</span> RequestGenerater_http();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"%E6%9E%84%E9%80%A0requesthttp%E5%B7%A5%E5%8E%82\"></a></p>\n<h2 id=\"构造Request-http工厂\"><a href=\"#构造Request-http工厂\" class=\"headerlink\" title=\"构造Request_http工厂\"></a>构造Request_http工厂</h2><p>这个工厂返回Request_http类型，它还有权决定返回哪种Request_http类型，可能是Request_http_mobile以适应移动终端，也可能是Request_http_pc以适应桌面端。</p>\n<p>为了简单起见，这里只返回最基本的Request_http类型。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RequestGenerater_http</span> <span class=\"keyword\">implements</span> <span class=\"title\">IGenerater</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">include_once</span> <span class=\"string\">'Request_http.class.php'</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Request_http();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>至此，所有的类已经构造完毕。接下来是控制器的控制流。</p>\n<p><a name=\"%E6%8E%A7%E5%88%B6%E5%99%A8\"></a></p>\n<h2 id=\"控制器\"><a href=\"#控制器\" class=\"headerlink\" title=\"控制器\"></a>控制器</h2><p>首先在控制器中引入 <em>工厂管理者</em> 和各种 <em>观察者</em>。</p>\n<p>然后调用管理者的<code>getObject</code>方法获得正确的Request类，它同时也是被观察对象。</p>\n<p>接着将各种观察者绑定到Request上，或者解绑。</p>\n<p>最后通知观察者即可。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">include_once</span> ROOT.<span class=\"string\">'/models/datatype/request/RequestGeneraterManager.class.php'</span>;</div><div class=\"line\"><span class=\"keyword\">include_once</span> ROOT.<span class=\"string\">'/models/datatype/request/RequestSecurityObserver.class.php'</span>;</div><div class=\"line\"><span class=\"keyword\">include_once</span> ROOT.<span class=\"string\">'/models/datatype/request/RequestxxxxxxxxObserver.class.php'</span>;</div><div class=\"line\"><span class=\"keyword\">include_once</span> ROOT.<span class=\"string\">'/models/datatype/request/RequestxxxxxxxxObserver.class.php'</span>;</div><div class=\"line\">$request_generater_manager = <span class=\"keyword\">new</span> RequestGeneraterManager();</div><div class=\"line\">$request = $request_generater_manager-&gt;getObject();</div><div class=\"line\">$request-&gt;attach(<span class=\"keyword\">new</span> RequestSecurityObserver());</div><div class=\"line\">$request-&gt;attach(<span class=\"keyword\">new</span> RequestxxxxxxxxObserver());</div><div class=\"line\">$request-&gt;detach(<span class=\"keyword\">new</span> RequestxxxxxxxxObserver());</div><div class=\"line\">$request-&gt;notify();</div></pre></td></tr></table></figure>\n<p>通过以上一系列的定义，Request类已经非常灵活，后期无论是新增功能（新建观察者），还是新增类型（新建工厂），都可以轻松应付。</p>\n<p>新增功能时，只要改动控制器的attach和detach即可。<br>新增类型时，只要新建该类型，在工厂中做与其对应的处理即可。</p>\n<p>下面是程序流：</p>\n<ol>\n<li>控制器实例化工厂管理者RequestGeneraterManager</li>\n<li>控制器调用管理者的getObject方法获得Request对象<ol>\n<li>工厂管理者调用适当工厂的generate方法</li>\n<li>工厂生成相应对象，并赋予其合适的属性</li>\n</ol>\n</li>\n<li>控制器为Request对象绑定各种观察者</li>\n<li>控制器调用Request的notify方法，使观察者依次操作Request对象</li>\n<li>控制器重新拥有Request对象的控制权</li>\n</ol>"},{"title":"VBS探索U盘","date":"2017-06-26T16:00:00.000Z","_content":"\n如果存在多个可移动磁盘，通过该脚本可以迅速拷贝目标文件，并分析磁盘结构。\n\n目录：\n<!-- MarkdownTOC -->\n\n- [参数说明](#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E)\n- [源代码](#%E6%BA%90%E4%BB%A3%E7%A0%81)\n\n<!-- /MarkdownTOC -->\n\n<!-- more -->\n\n<a name=\"%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\"></a>\n## 参数说明\n\n```\n    ListLB：         列出大于该值的文件，0表示列出所有\n\n    ListDepthToStop：列表深度，0表示列出所有\n\n    RunFileCopy：    是否运行拷贝模块\n\n    CopyFrom：       进行拷贝搜索的根目录\n\n    CopyPattern：    拷贝搜索的正则表达式\n\n    CopyLB：         拷贝下界，0表示无下界\n\n    CopyUB：         拷贝上界，0表示无上界\n\n    InfoTo：         U盘信息保存目录\n\n    DriveInfoTo：    U盘信息保存文件\n\n    DriveListTo：    U盘文件信息保存文件\n```\n\n<a name=\"%E6%BA%90%E4%BB%A3%E7%A0%81\"></a>\n## 源代码\n\n```vbs\nListLB              = 0\nListDepthToStop     = 0\nRunFileCopy         = True\nCopyFrom            = \"\"\nCopyPattern         = \"\"\nCopyLB              = 0\nCopyUB              = 1024*1024*3\nInfoTo              = \"\"\nDriveInfoTo         = \"\"\nDriveListTo         = \"\"\n\nset FSO         = CreateObject(\"Scripting.FileSystemObject\")\nset Drives      = FSO.Drives\nset RE          = New RegExp\nCurDrive        = FSO.GetDriveName(FSO.GetAbsolutePathName(\".\"))\nRE.Pattern      = CopyPattern\n\nFor Each Drive In Drives\n    If  Drive.DriveType = 1 _\n    AND Drive.Path <> CurDrive Then\n        Randomize\n        SavingFolder    = FSO.BuildPath(CurDrive\\InfoTo\\Drive.VolumeName_Int(Rnd()*100))\n        Call MakeFolder(SavingFolder)\n\n        set F_DriveInfo = FSO.OpenTextFile(FSO.BuildPath(SavingFolder, DriveInfoTo), 2, True, -1)\n        set F_DriveList = FSO.OpenTextFile(FSO.BuildPath(SavingFolder, DriveListTo), 2, True, -1)\n        Call ListDrive(Drive.Path)\n        Call ListFolder(Drive.RootFolder.Path, 1)\n        F_DriveInfo.Close\n        F_DriveList.Close\n\n        IF CopyFrom = \"\" Then CopyFrom = Drive.RootFolder.Path\n        IF RunFileCopy = True AND FSO.FolderExists(CopyFrom) Then _\n            Call FileCopy(CopyFrom, SavingFolder)\n    End If\nNext\n\nFunction ListDrive (drive_path__)\n    set drive__     = FSO.GetDrive(drive_path__)\n    F_DriveInfo.WriteLine(\"Date:\" & \" \" & Date())\n    F_DriveInfo.WriteLine(\"VolumeName:\" & \" \" & drive__.VolumeName)\n    F_DriveInfo.WriteLine(\"FileSystem:\" & \" \" & drive__.FileSystem)\n    F_DriveInfo.WriteLine(\"TotalSize:\" & \" \" & drive__.TotalSize/1024/1024)\n    F_DriveInfo.WriteLine(\"FreeSpace:\" & \" \" & drive__.FreeSpace/1024/1024)\nEnd Function\n\nFunction ListFolder(cur_folder__, cur_depth__)\n    F_DriveList.WriteLine(Space((cur_depth__-1)*2) & \"+ \" & FSO.GetBaseName(cur_folder__))\n    For Each cur_file__ In FSO.GetFolder(cur_folder__).Files\n        If (ListLB = 0 OR cur_file__.Size > ListLB) Then _\n            F_DriveList.WriteLine(Space(cur_depth__*2) & cur_file__.Name)\n    Next\n    For Each sub_folder__ In FSO.GetFolder(cur_folder__).SubFolders\n        IF (DepthToStop = 0 OR cur_depth__ < DepthToStop) Then _\n            Call ListFolder(sub_folder__, cur_depth__ + 1)\n    Next\nEnd Function\n\nFunction FileCopy(src_folder__, sav_folder__)\n    For Each cur_file__ In FSO.GetFolder(src_folder__).Files\n        IF  (CopyUB = 0 OR cur_file__.Size < CopyUB) _\n        AND (CopyLB = 0 OR cur_file__.Size > CopyLB) _\n        AND (RE.Test(cur_file__.Name) = True) Then\n            IF Not FSO.FolderExists(sav_folder__) Then Call MakeFolder(sav_folder__)\n            FSO.CopyFile cur_file__.Path, FSO.BuildPath(sav_folder__, cur_file__.Name)\n        End If\n    Next\n    For Each sub_folder__ In FSO.GetFolder(src_folder__).SubFolders\n        Call FileCopy(sub_folder__,FSO.BuildPath(sav_folder__, FSO.GetBaseName(sub_folder__)))\n    Next\nEnd Function\n\nFunction MakeFolder(tar_path__)\n    If Not FSO.FolderExists(FSO.GetParentFolderName(tar_path__)) Then _\n        Call MakeFolder(FSO.GetParentFolderName(tar_path__))\n    If Not FSO.FolderExists(tar_path__) Then _\n        FSO.CreateFolder(tar_path__)\nEnd Function\n```","source":"_posts/vbs-copyFileFromUDisk.md","raw":"---\ntitle: VBS探索U盘\ndate: 2017-06-27\ntag: [VBS]\n---\n\n如果存在多个可移动磁盘，通过该脚本可以迅速拷贝目标文件，并分析磁盘结构。\n\n目录：\n<!-- MarkdownTOC -->\n\n- [参数说明](#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E)\n- [源代码](#%E6%BA%90%E4%BB%A3%E7%A0%81)\n\n<!-- /MarkdownTOC -->\n\n<!-- more -->\n\n<a name=\"%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\"></a>\n## 参数说明\n\n```\n    ListLB：         列出大于该值的文件，0表示列出所有\n\n    ListDepthToStop：列表深度，0表示列出所有\n\n    RunFileCopy：    是否运行拷贝模块\n\n    CopyFrom：       进行拷贝搜索的根目录\n\n    CopyPattern：    拷贝搜索的正则表达式\n\n    CopyLB：         拷贝下界，0表示无下界\n\n    CopyUB：         拷贝上界，0表示无上界\n\n    InfoTo：         U盘信息保存目录\n\n    DriveInfoTo：    U盘信息保存文件\n\n    DriveListTo：    U盘文件信息保存文件\n```\n\n<a name=\"%E6%BA%90%E4%BB%A3%E7%A0%81\"></a>\n## 源代码\n\n```vbs\nListLB              = 0\nListDepthToStop     = 0\nRunFileCopy         = True\nCopyFrom            = \"\"\nCopyPattern         = \"\"\nCopyLB              = 0\nCopyUB              = 1024*1024*3\nInfoTo              = \"\"\nDriveInfoTo         = \"\"\nDriveListTo         = \"\"\n\nset FSO         = CreateObject(\"Scripting.FileSystemObject\")\nset Drives      = FSO.Drives\nset RE          = New RegExp\nCurDrive        = FSO.GetDriveName(FSO.GetAbsolutePathName(\".\"))\nRE.Pattern      = CopyPattern\n\nFor Each Drive In Drives\n    If  Drive.DriveType = 1 _\n    AND Drive.Path <> CurDrive Then\n        Randomize\n        SavingFolder    = FSO.BuildPath(CurDrive\\InfoTo\\Drive.VolumeName_Int(Rnd()*100))\n        Call MakeFolder(SavingFolder)\n\n        set F_DriveInfo = FSO.OpenTextFile(FSO.BuildPath(SavingFolder, DriveInfoTo), 2, True, -1)\n        set F_DriveList = FSO.OpenTextFile(FSO.BuildPath(SavingFolder, DriveListTo), 2, True, -1)\n        Call ListDrive(Drive.Path)\n        Call ListFolder(Drive.RootFolder.Path, 1)\n        F_DriveInfo.Close\n        F_DriveList.Close\n\n        IF CopyFrom = \"\" Then CopyFrom = Drive.RootFolder.Path\n        IF RunFileCopy = True AND FSO.FolderExists(CopyFrom) Then _\n            Call FileCopy(CopyFrom, SavingFolder)\n    End If\nNext\n\nFunction ListDrive (drive_path__)\n    set drive__     = FSO.GetDrive(drive_path__)\n    F_DriveInfo.WriteLine(\"Date:\" & \" \" & Date())\n    F_DriveInfo.WriteLine(\"VolumeName:\" & \" \" & drive__.VolumeName)\n    F_DriveInfo.WriteLine(\"FileSystem:\" & \" \" & drive__.FileSystem)\n    F_DriveInfo.WriteLine(\"TotalSize:\" & \" \" & drive__.TotalSize/1024/1024)\n    F_DriveInfo.WriteLine(\"FreeSpace:\" & \" \" & drive__.FreeSpace/1024/1024)\nEnd Function\n\nFunction ListFolder(cur_folder__, cur_depth__)\n    F_DriveList.WriteLine(Space((cur_depth__-1)*2) & \"+ \" & FSO.GetBaseName(cur_folder__))\n    For Each cur_file__ In FSO.GetFolder(cur_folder__).Files\n        If (ListLB = 0 OR cur_file__.Size > ListLB) Then _\n            F_DriveList.WriteLine(Space(cur_depth__*2) & cur_file__.Name)\n    Next\n    For Each sub_folder__ In FSO.GetFolder(cur_folder__).SubFolders\n        IF (DepthToStop = 0 OR cur_depth__ < DepthToStop) Then _\n            Call ListFolder(sub_folder__, cur_depth__ + 1)\n    Next\nEnd Function\n\nFunction FileCopy(src_folder__, sav_folder__)\n    For Each cur_file__ In FSO.GetFolder(src_folder__).Files\n        IF  (CopyUB = 0 OR cur_file__.Size < CopyUB) _\n        AND (CopyLB = 0 OR cur_file__.Size > CopyLB) _\n        AND (RE.Test(cur_file__.Name) = True) Then\n            IF Not FSO.FolderExists(sav_folder__) Then Call MakeFolder(sav_folder__)\n            FSO.CopyFile cur_file__.Path, FSO.BuildPath(sav_folder__, cur_file__.Name)\n        End If\n    Next\n    For Each sub_folder__ In FSO.GetFolder(src_folder__).SubFolders\n        Call FileCopy(sub_folder__,FSO.BuildPath(sav_folder__, FSO.GetBaseName(sub_folder__)))\n    Next\nEnd Function\n\nFunction MakeFolder(tar_path__)\n    If Not FSO.FolderExists(FSO.GetParentFolderName(tar_path__)) Then _\n        Call MakeFolder(FSO.GetParentFolderName(tar_path__))\n    If Not FSO.FolderExists(tar_path__) Then _\n        FSO.CreateFolder(tar_path__)\nEnd Function\n```","slug":"vbs-copyFileFromUDisk","published":1,"updated":"2017-10-27T14:15:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9a0ztlj0005n9s853rdlb96","content":"<p>如果存在多个可移动磁盘，通过该脚本可以迅速拷贝目标文件，并分析磁盘结构。</p>\n<p>目录：<br><!-- MarkdownTOC --></p>\n<ul>\n<li><a href=\"#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\">参数说明</a></li>\n<li><a href=\"#%E6%BA%90%E4%BB%A3%E7%A0%81\">源代码</a></li>\n</ul>\n<!-- /MarkdownTOC -->\n<a id=\"more\"></a>\n<p><a name=\"%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\"></a></p>\n<h2 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">ListLB：         列出大于该值的文件，0表示列出所有</div><div class=\"line\"></div><div class=\"line\">ListDepthToStop：列表深度，0表示列出所有</div><div class=\"line\"></div><div class=\"line\">RunFileCopy：    是否运行拷贝模块</div><div class=\"line\"></div><div class=\"line\">CopyFrom：       进行拷贝搜索的根目录</div><div class=\"line\"></div><div class=\"line\">CopyPattern：    拷贝搜索的正则表达式</div><div class=\"line\"></div><div class=\"line\">CopyLB：         拷贝下界，0表示无下界</div><div class=\"line\"></div><div class=\"line\">CopyUB：         拷贝上界，0表示无上界</div><div class=\"line\"></div><div class=\"line\">InfoTo：         U盘信息保存目录</div><div class=\"line\"></div><div class=\"line\">DriveInfoTo：    U盘信息保存文件</div><div class=\"line\"></div><div class=\"line\">DriveListTo：    U盘文件信息保存文件</div></pre></td></tr></table></figure>\n<p><a name=\"%E6%BA%90%E4%BB%A3%E7%A0%81\"></a></p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight vbs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\">ListLB              = <span class=\"number\">0</span></div><div class=\"line\">ListDepthToStop     = <span class=\"number\">0</span></div><div class=\"line\">RunFileCopy         = <span class=\"literal\">True</span></div><div class=\"line\">CopyFrom            = <span class=\"string\">\"\"</span></div><div class=\"line\">CopyPattern         = <span class=\"string\">\"\"</span></div><div class=\"line\">CopyLB              = <span class=\"number\">0</span></div><div class=\"line\">CopyUB              = <span class=\"number\">1024</span>*<span class=\"number\">1024</span>*<span class=\"number\">3</span></div><div class=\"line\">InfoTo              = <span class=\"string\">\"\"</span></div><div class=\"line\">DriveInfoTo         = <span class=\"string\">\"\"</span></div><div class=\"line\">DriveListTo         = <span class=\"string\">\"\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> FSO         = <span class=\"built_in\">CreateObject</span>(<span class=\"string\">\"Scripting.FileSystemObject\"</span>)</div><div class=\"line\"><span class=\"keyword\">set</span> Drives      = FSO.Drives</div><div class=\"line\"><span class=\"keyword\">set</span> RE          = <span class=\"keyword\">New</span> <span class=\"built_in\">RegExp</span></div><div class=\"line\">CurDrive        = FSO.GetDriveName(FSO.GetAbsolutePathName(<span class=\"string\">\".\"</span>))</div><div class=\"line\">RE.Pattern      = CopyPattern</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> Drive <span class=\"keyword\">In</span> Drives</div><div class=\"line\">    <span class=\"keyword\">If</span>  Drive.DriveType = <span class=\"number\">1</span> _</div><div class=\"line\">    <span class=\"keyword\">AND</span> Drive.Path &lt;&gt; CurDrive <span class=\"keyword\">Then</span></div><div class=\"line\">        <span class=\"keyword\">Randomize</span></div><div class=\"line\">        SavingFolder    = FSO.BuildPath(CurDrive\\InfoTo\\Drive.VolumeName_Int(<span class=\"built_in\">Rnd</span>()*<span class=\"number\">100</span>))</div><div class=\"line\">        <span class=\"keyword\">Call</span> MakeFolder(SavingFolder)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">set</span> F_DriveInfo = FSO.OpenTextFile(FSO.BuildPath(SavingFolder, DriveInfoTo), <span class=\"number\">2</span>, <span class=\"literal\">True</span>, <span class=\"number\">-1</span>)</div><div class=\"line\">        <span class=\"keyword\">set</span> F_DriveList = FSO.OpenTextFile(FSO.BuildPath(SavingFolder, DriveListTo), <span class=\"number\">2</span>, <span class=\"literal\">True</span>, <span class=\"number\">-1</span>)</div><div class=\"line\">        <span class=\"keyword\">Call</span> ListDrive(Drive.Path)</div><div class=\"line\">        <span class=\"keyword\">Call</span> ListFolder(Drive.RootFolder.Path, <span class=\"number\">1</span>)</div><div class=\"line\">        F_DriveInfo.Close</div><div class=\"line\">        F_DriveList.Close</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">IF</span> CopyFrom = <span class=\"string\">\"\"</span> <span class=\"keyword\">Then</span> CopyFrom = Drive.RootFolder.Path</div><div class=\"line\">        <span class=\"keyword\">IF</span> RunFileCopy = <span class=\"literal\">True</span> <span class=\"keyword\">AND</span> FSO.FolderExists(CopyFrom) <span class=\"keyword\">Then</span> _</div><div class=\"line\">            <span class=\"keyword\">Call</span> FileCopy(CopyFrom, SavingFolder)</div><div class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></div><div class=\"line\"><span class=\"keyword\">Next</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Function</span> ListDrive (drive_path__)</div><div class=\"line\">    <span class=\"keyword\">set</span> drive__     = FSO.GetDrive(drive_path__)</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"Date:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; <span class=\"built_in\">Date</span>())</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"VolumeName:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; drive__.VolumeName)</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"FileSystem:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; drive__.FileSystem)</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"TotalSize:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; drive__.TotalSize/<span class=\"number\">1024</span>/<span class=\"number\">1024</span>)</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"FreeSpace:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; drive__.FreeSpace/<span class=\"number\">1024</span>/<span class=\"number\">1024</span>)</div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Function</span> ListFolder(cur_folder__, cur_depth__)</div><div class=\"line\">    F_DriveList.WriteLine(<span class=\"built_in\">Space</span>((cur_depth__<span class=\"number\">-1</span>)*<span class=\"number\">2</span>) &amp; <span class=\"string\">\"+ \"</span> &amp; FSO.GetBaseName(cur_folder__))</div><div class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> cur_file__ <span class=\"keyword\">In</span> FSO.GetFolder(cur_folder__).Files</div><div class=\"line\">        <span class=\"keyword\">If</span> (ListLB = <span class=\"number\">0</span> <span class=\"keyword\">OR</span> cur_file__.Size &gt; ListLB) <span class=\"keyword\">Then</span> _</div><div class=\"line\">            F_DriveList.WriteLine(<span class=\"built_in\">Space</span>(cur_depth__*<span class=\"number\">2</span>) &amp; cur_file__.Name)</div><div class=\"line\">    <span class=\"keyword\">Next</span></div><div class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> sub_folder__ <span class=\"keyword\">In</span> FSO.GetFolder(cur_folder__).SubFolders</div><div class=\"line\">        <span class=\"keyword\">IF</span> (DepthToStop = <span class=\"number\">0</span> <span class=\"keyword\">OR</span> cur_depth__ &lt; DepthToStop) <span class=\"keyword\">Then</span> _</div><div class=\"line\">            <span class=\"keyword\">Call</span> ListFolder(sub_folder__, cur_depth__ + <span class=\"number\">1</span>)</div><div class=\"line\">    <span class=\"keyword\">Next</span></div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Function</span> FileCopy(src_folder__, sav_folder__)</div><div class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> cur_file__ <span class=\"keyword\">In</span> FSO.GetFolder(src_folder__).Files</div><div class=\"line\">        <span class=\"keyword\">IF</span>  (CopyUB = <span class=\"number\">0</span> <span class=\"keyword\">OR</span> cur_file__.Size &lt; CopyUB) _</div><div class=\"line\">        <span class=\"keyword\">AND</span> (CopyLB = <span class=\"number\">0</span> <span class=\"keyword\">OR</span> cur_file__.Size &gt; CopyLB) _</div><div class=\"line\">        <span class=\"keyword\">AND</span> (RE.Test(cur_file__.Name) = <span class=\"literal\">True</span>) <span class=\"keyword\">Then</span></div><div class=\"line\">            <span class=\"keyword\">IF</span> <span class=\"keyword\">Not</span> FSO.FolderExists(sav_folder__) <span class=\"keyword\">Then</span> <span class=\"keyword\">Call</span> MakeFolder(sav_folder__)</div><div class=\"line\">            FSO.CopyFile cur_file__.Path, FSO.BuildPath(sav_folder__, cur_file__.Name)</div><div class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></div><div class=\"line\">    <span class=\"keyword\">Next</span></div><div class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> sub_folder__ <span class=\"keyword\">In</span> FSO.GetFolder(src_folder__).SubFolders</div><div class=\"line\">        <span class=\"keyword\">Call</span> FileCopy(sub_folder__,FSO.BuildPath(sav_folder__, FSO.GetBaseName(sub_folder__)))</div><div class=\"line\">    <span class=\"keyword\">Next</span></div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Function</span> MakeFolder(tar_path__)</div><div class=\"line\">    <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> FSO.FolderExists(FSO.GetParentFolderName(tar_path__)) <span class=\"keyword\">Then</span> _</div><div class=\"line\">        <span class=\"keyword\">Call</span> MakeFolder(FSO.GetParentFolderName(tar_path__))</div><div class=\"line\">    <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> FSO.FolderExists(tar_path__) <span class=\"keyword\">Then</span> _</div><div class=\"line\">        FSO.CreateFolder(tar_path__)</div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>如果存在多个可移动磁盘，通过该脚本可以迅速拷贝目标文件，并分析磁盘结构。</p>\n<p>目录：<br><!-- MarkdownTOC --></p>\n<ul>\n<li><a href=\"#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\">参数说明</a></li>\n<li><a href=\"#%E6%BA%90%E4%BB%A3%E7%A0%81\">源代码</a></li>\n</ul>\n<!-- /MarkdownTOC -->","more":"<p><a name=\"%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\"></a></p>\n<h2 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">ListLB：         列出大于该值的文件，0表示列出所有</div><div class=\"line\"></div><div class=\"line\">ListDepthToStop：列表深度，0表示列出所有</div><div class=\"line\"></div><div class=\"line\">RunFileCopy：    是否运行拷贝模块</div><div class=\"line\"></div><div class=\"line\">CopyFrom：       进行拷贝搜索的根目录</div><div class=\"line\"></div><div class=\"line\">CopyPattern：    拷贝搜索的正则表达式</div><div class=\"line\"></div><div class=\"line\">CopyLB：         拷贝下界，0表示无下界</div><div class=\"line\"></div><div class=\"line\">CopyUB：         拷贝上界，0表示无上界</div><div class=\"line\"></div><div class=\"line\">InfoTo：         U盘信息保存目录</div><div class=\"line\"></div><div class=\"line\">DriveInfoTo：    U盘信息保存文件</div><div class=\"line\"></div><div class=\"line\">DriveListTo：    U盘文件信息保存文件</div></pre></td></tr></table></figure>\n<p><a name=\"%E6%BA%90%E4%BB%A3%E7%A0%81\"></a></p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight vbs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\">ListLB              = <span class=\"number\">0</span></div><div class=\"line\">ListDepthToStop     = <span class=\"number\">0</span></div><div class=\"line\">RunFileCopy         = <span class=\"literal\">True</span></div><div class=\"line\">CopyFrom            = <span class=\"string\">\"\"</span></div><div class=\"line\">CopyPattern         = <span class=\"string\">\"\"</span></div><div class=\"line\">CopyLB              = <span class=\"number\">0</span></div><div class=\"line\">CopyUB              = <span class=\"number\">1024</span>*<span class=\"number\">1024</span>*<span class=\"number\">3</span></div><div class=\"line\">InfoTo              = <span class=\"string\">\"\"</span></div><div class=\"line\">DriveInfoTo         = <span class=\"string\">\"\"</span></div><div class=\"line\">DriveListTo         = <span class=\"string\">\"\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> FSO         = <span class=\"built_in\">CreateObject</span>(<span class=\"string\">\"Scripting.FileSystemObject\"</span>)</div><div class=\"line\"><span class=\"keyword\">set</span> Drives      = FSO.Drives</div><div class=\"line\"><span class=\"keyword\">set</span> RE          = <span class=\"keyword\">New</span> <span class=\"built_in\">RegExp</span></div><div class=\"line\">CurDrive        = FSO.GetDriveName(FSO.GetAbsolutePathName(<span class=\"string\">\".\"</span>))</div><div class=\"line\">RE.Pattern      = CopyPattern</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> Drive <span class=\"keyword\">In</span> Drives</div><div class=\"line\">    <span class=\"keyword\">If</span>  Drive.DriveType = <span class=\"number\">1</span> _</div><div class=\"line\">    <span class=\"keyword\">AND</span> Drive.Path &lt;&gt; CurDrive <span class=\"keyword\">Then</span></div><div class=\"line\">        <span class=\"keyword\">Randomize</span></div><div class=\"line\">        SavingFolder    = FSO.BuildPath(CurDrive\\InfoTo\\Drive.VolumeName_Int(<span class=\"built_in\">Rnd</span>()*<span class=\"number\">100</span>))</div><div class=\"line\">        <span class=\"keyword\">Call</span> MakeFolder(SavingFolder)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">set</span> F_DriveInfo = FSO.OpenTextFile(FSO.BuildPath(SavingFolder, DriveInfoTo), <span class=\"number\">2</span>, <span class=\"literal\">True</span>, <span class=\"number\">-1</span>)</div><div class=\"line\">        <span class=\"keyword\">set</span> F_DriveList = FSO.OpenTextFile(FSO.BuildPath(SavingFolder, DriveListTo), <span class=\"number\">2</span>, <span class=\"literal\">True</span>, <span class=\"number\">-1</span>)</div><div class=\"line\">        <span class=\"keyword\">Call</span> ListDrive(Drive.Path)</div><div class=\"line\">        <span class=\"keyword\">Call</span> ListFolder(Drive.RootFolder.Path, <span class=\"number\">1</span>)</div><div class=\"line\">        F_DriveInfo.Close</div><div class=\"line\">        F_DriveList.Close</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">IF</span> CopyFrom = <span class=\"string\">\"\"</span> <span class=\"keyword\">Then</span> CopyFrom = Drive.RootFolder.Path</div><div class=\"line\">        <span class=\"keyword\">IF</span> RunFileCopy = <span class=\"literal\">True</span> <span class=\"keyword\">AND</span> FSO.FolderExists(CopyFrom) <span class=\"keyword\">Then</span> _</div><div class=\"line\">            <span class=\"keyword\">Call</span> FileCopy(CopyFrom, SavingFolder)</div><div class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></div><div class=\"line\"><span class=\"keyword\">Next</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Function</span> ListDrive (drive_path__)</div><div class=\"line\">    <span class=\"keyword\">set</span> drive__     = FSO.GetDrive(drive_path__)</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"Date:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; <span class=\"built_in\">Date</span>())</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"VolumeName:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; drive__.VolumeName)</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"FileSystem:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; drive__.FileSystem)</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"TotalSize:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; drive__.TotalSize/<span class=\"number\">1024</span>/<span class=\"number\">1024</span>)</div><div class=\"line\">    F_DriveInfo.WriteLine(<span class=\"string\">\"FreeSpace:\"</span> &amp; <span class=\"string\">\" \"</span> &amp; drive__.FreeSpace/<span class=\"number\">1024</span>/<span class=\"number\">1024</span>)</div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Function</span> ListFolder(cur_folder__, cur_depth__)</div><div class=\"line\">    F_DriveList.WriteLine(<span class=\"built_in\">Space</span>((cur_depth__<span class=\"number\">-1</span>)*<span class=\"number\">2</span>) &amp; <span class=\"string\">\"+ \"</span> &amp; FSO.GetBaseName(cur_folder__))</div><div class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> cur_file__ <span class=\"keyword\">In</span> FSO.GetFolder(cur_folder__).Files</div><div class=\"line\">        <span class=\"keyword\">If</span> (ListLB = <span class=\"number\">0</span> <span class=\"keyword\">OR</span> cur_file__.Size &gt; ListLB) <span class=\"keyword\">Then</span> _</div><div class=\"line\">            F_DriveList.WriteLine(<span class=\"built_in\">Space</span>(cur_depth__*<span class=\"number\">2</span>) &amp; cur_file__.Name)</div><div class=\"line\">    <span class=\"keyword\">Next</span></div><div class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> sub_folder__ <span class=\"keyword\">In</span> FSO.GetFolder(cur_folder__).SubFolders</div><div class=\"line\">        <span class=\"keyword\">IF</span> (DepthToStop = <span class=\"number\">0</span> <span class=\"keyword\">OR</span> cur_depth__ &lt; DepthToStop) <span class=\"keyword\">Then</span> _</div><div class=\"line\">            <span class=\"keyword\">Call</span> ListFolder(sub_folder__, cur_depth__ + <span class=\"number\">1</span>)</div><div class=\"line\">    <span class=\"keyword\">Next</span></div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Function</span> FileCopy(src_folder__, sav_folder__)</div><div class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> cur_file__ <span class=\"keyword\">In</span> FSO.GetFolder(src_folder__).Files</div><div class=\"line\">        <span class=\"keyword\">IF</span>  (CopyUB = <span class=\"number\">0</span> <span class=\"keyword\">OR</span> cur_file__.Size &lt; CopyUB) _</div><div class=\"line\">        <span class=\"keyword\">AND</span> (CopyLB = <span class=\"number\">0</span> <span class=\"keyword\">OR</span> cur_file__.Size &gt; CopyLB) _</div><div class=\"line\">        <span class=\"keyword\">AND</span> (RE.Test(cur_file__.Name) = <span class=\"literal\">True</span>) <span class=\"keyword\">Then</span></div><div class=\"line\">            <span class=\"keyword\">IF</span> <span class=\"keyword\">Not</span> FSO.FolderExists(sav_folder__) <span class=\"keyword\">Then</span> <span class=\"keyword\">Call</span> MakeFolder(sav_folder__)</div><div class=\"line\">            FSO.CopyFile cur_file__.Path, FSO.BuildPath(sav_folder__, cur_file__.Name)</div><div class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></div><div class=\"line\">    <span class=\"keyword\">Next</span></div><div class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> sub_folder__ <span class=\"keyword\">In</span> FSO.GetFolder(src_folder__).SubFolders</div><div class=\"line\">        <span class=\"keyword\">Call</span> FileCopy(sub_folder__,FSO.BuildPath(sav_folder__, FSO.GetBaseName(sub_folder__)))</div><div class=\"line\">    <span class=\"keyword\">Next</span></div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Function</span> MakeFolder(tar_path__)</div><div class=\"line\">    <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> FSO.FolderExists(FSO.GetParentFolderName(tar_path__)) <span class=\"keyword\">Then</span> _</div><div class=\"line\">        <span class=\"keyword\">Call</span> MakeFolder(FSO.GetParentFolderName(tar_path__))</div><div class=\"line\">    <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> FSO.FolderExists(tar_path__) <span class=\"keyword\">Then</span> _</div><div class=\"line\">        FSO.CreateFolder(tar_path__)</div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj9a0ztl70000n9s8mi3j3jki","tag_id":"cj9a0ztle0003n9s8mre26rp1","_id":"cj9a0ztll0007n9s8scw7trvk"},{"post_id":"cj9a0ztlc0002n9s8z5j84bsr","tag_id":"cj9a0ztll0006n9s8zktuvgft","_id":"cj9a0ztln000an9s82x2iypow"},{"post_id":"cj9a0ztlc0002n9s8z5j84bsr","tag_id":"cj9a0ztlm0008n9s81vuhvieu","_id":"cj9a0ztln000bn9s8p841v5t7"},{"post_id":"cj9a0ztlg0004n9s8feoms282","tag_id":"cj9a0ztll0006n9s8zktuvgft","_id":"cj9a0ztlo000en9s8b0w3gu6y"},{"post_id":"cj9a0ztlg0004n9s8feoms282","tag_id":"cj9a0ztlm0008n9s81vuhvieu","_id":"cj9a0ztlo000fn9s87pbm2vji"},{"post_id":"cj9a0ztlj0005n9s853rdlb96","tag_id":"cj9a0ztlo000dn9s81lquln4x","_id":"cj9a0ztlo000gn9s8ah3axlh7"}],"Tag":[{"name":"MySQL","_id":"cj9a0ztle0003n9s8mre26rp1"},{"name":"php","_id":"cj9a0ztll0006n9s8zktuvgft"},{"name":"设计模式","_id":"cj9a0ztlm0008n9s81vuhvieu"},{"name":"VBS","_id":"cj9a0ztlo000dn9s81lquln4x"}]}}